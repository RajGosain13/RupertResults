import numpy as np

def TriakisTetrahedron():
    return np.array([
        (1.060660171779821, 1.060660171779821, 1.060660171779821),
        (1.060660171779821, -1.060660171779821, -1.060660171779821),
        (-1.060660171779821, -1.060660171779821, 1.060660171779821),
        (-1.060660171779821, 1.060660171779821, -1.060660171779821),
        (0.636396103067893, -0.636396103067893, 0.636396103067893),
        (0.636396103067893, 0.636396103067893, -0.636396103067893),
        (-0.636396103067893, 0.636396103067893, 0.636396103067893),
        (-0.636396103067893, -0.636396103067893, -0.636396103067893),
    ])

def PentakisDodecahedron():
    return np.array([
        (0.000000000000000, 0.927050983124842, 2.427050983124842),
        (0.000000000000000, 0.927050983124842, -2.427050983124842),
        (0.000000000000000, -0.927050983124842, 2.427050983124842),
        (0.000000000000000, -0.927050983124842, -2.427050983124842),
        (2.427050983124842, 0.000000000000000, 0.927050983124842),
        (2.427050983124842, 0.000000000000000, -0.927050983124842),
        (-2.427050983124842, 0.000000000000000, 0.927050983124842),
        (-2.427050983124842, 0.000000000000000, -0.927050983124842),
        (0.927050983124842, 2.427050983124842, 0.000000000000000),
        (0.927050983124842, -2.427050983124842, 0.000000000000000),
        (-0.927050983124842, 2.427050983124842, 0.000000000000000),
        (-0.927050983124842, -2.427050983124842, 0.000000000000000),
        (1.330586997335501, 0.000000000000000, 2.152934986677507),
        (1.330586997335501, 0.000000000000000, -2.152934986677507),
        (-1.330586997335501, 0.000000000000000, 2.152934986677507),
        (-1.330586997335501, 0.000000000000000, -2.152934986677507),
        (2.152934986677507, 1.330586997335501, 0.000000000000000),
        (2.152934986677507, -1.330586997335501, 0.000000000000000),
        (-2.152934986677507, 1.330586997335501, 0.000000000000000),
        (-2.152934986677507, -1.330586997335501, 0.000000000000000),
        (0.000000000000000, 2.152934986677507, 1.330586997335501),
        (0.000000000000000, 2.152934986677507, -1.330586997335501),
        (0.000000000000000, -2.152934986677507, 1.330586997335501),
        (0.000000000000000, -2.152934986677507, -1.330586997335501),
        (1.500000000000000, 1.500000000000000, 1.500000000000000),
        (1.500000000000000, 1.500000000000000, -1.500000000000000),
        (1.500000000000000, -1.500000000000000, 1.500000000000000),
        (1.500000000000000, -1.500000000000000, -1.500000000000000),
        (-1.500000000000000, 1.500000000000000, 1.500000000000000),
        (-1.500000000000000, 1.500000000000000, -1.500000000000000),
        (-1.500000000000000, -1.500000000000000, 1.500000000000000),
        (-1.500000000000000, -1.500000000000000, -1.500000000000000),
    ])

def TetrakisHexahedron():
    return np.array([
        (0.000000000000000, 0.000000000000000, 1.590990257669732),
        (0.000000000000000, 0.000000000000000, -1.590990257669732),
        (1.590990257669732, 0.000000000000000, 0.000000000000000),
        (-1.590990257669732, 0.000000000000000, 0.000000000000000),
        (0.000000000000000, 1.590990257669732, 0.000000000000000),
        (0.000000000000000, -1.590990257669732, 0.000000000000000),
        (1.060660171779821, 1.060660171779821, 1.060660171779821),
        (1.060660171779821, 1.060660171779821, -1.060660171779821),
        (1.060660171779821, -1.060660171779821, 1.060660171779821),
        (1.060660171779821, -1.060660171779821, -1.060660171779821),
        (-1.060660171779821, 1.060660171779821, 1.060660171779821),
        (-1.060660171779821, 1.060660171779821, -1.060660171779821),
        (-1.060660171779821, -1.060660171779821, 1.060660171779821),
        (-1.060660171779821, -1.060660171779821, -1.060660171779821),
    ])

def RhombicDodecahedron():
    return np.array([
        (0.000000000000000, 0.000000000000000, 1.060660171779821),
        (0.000000000000000, 0.000000000000000, -1.060660171779821),
        (1.060660171779821, 0.000000000000000, 0.000000000000000),
        (-1.060660171779821, 0.000000000000000, 0.000000000000000),
        (0.000000000000000, 1.060660171779821, 0.000000000000000),
        (0.000000000000000, -1.060660171779821, 0.000000000000000),
        (0.530330085889911, 0.530330085889911, 0.530330085889911),
        (0.530330085889911, 0.530330085889911, -0.530330085889911),
        (0.530330085889911, -0.530330085889911, 0.530330085889911),
        (0.530330085889911, -0.530330085889911, -0.530330085889911),
        (-0.530330085889911, 0.530330085889911, 0.530330085889911),
        (-0.530330085889911, 0.530330085889911, -0.530330085889911),
        (-0.530330085889911, -0.530330085889911, 0.530330085889911),
        (-0.530330085889911, -0.530330085889911, -0.530330085889911),
    ])

def DeltoidalHexecontahedron():
    return np.array([
        (0.000000000000000, 0.000000000000000, 2.236067977499790),
        (0.000000000000000, 0.000000000000000, -2.236067977499790),
        (2.236067977499790, 0.000000000000000, 0.000000000000000),
        (-2.236067977499790, 0.000000000000000, 0.000000000000000),
        (0.000000000000000, 2.236067977499790, 0.000000000000000),
        (0.000000000000000, -2.236067977499790, 0.000000000000000),
        (0.000000000000000, 0.783457635340900, 2.051118718068096),
        (0.000000000000000, 0.783457635340900, -2.051118718068096),
        (0.000000000000000, -0.783457635340900, 2.051118718068096),
        (0.000000000000000, -0.783457635340900, -2.051118718068096),
        (2.051118718068096, 0.000000000000000, 0.783457635340900),
        (2.051118718068096, 0.000000000000000, -0.783457635340900),
        (-2.051118718068096, 0.000000000000000, 0.783457635340900),
        (-2.051118718068096, 0.000000000000000, -0.783457635340900),
        (0.783457635340900, 2.051118718068096, 0.000000000000000),
        (0.783457635340900, -2.051118718068096, 0.000000000000000),
        (-0.783457635340900, 2.051118718068096, 0.000000000000000),
        (-0.783457635340900, -2.051118718068096, 0.000000000000000),
        (1.206011329583298, 0.000000000000000, 1.951367322083228),
        (1.206011329583298, 0.000000000000000, -1.951367322083228),
        (-1.206011329583298, 0.000000000000000, 1.951367322083228),
        (-1.206011329583298, 0.000000000000000, -1.951367322083228),
        (1.951367322083228, 1.206011329583298, 0.000000000000000),
        (1.951367322083228, -1.206011329583298, 0.000000000000000),
        (-1.951367322083228, 1.206011329583298, 0.000000000000000),
        (-1.951367322083228, -1.206011329583298, 0.000000000000000),
        (0.000000000000000, 1.951367322083228, 1.206011329583298),
        (0.000000000000000, 1.951367322083228, -1.206011329583298),
        (0.000000000000000, -1.951367322083228, 1.206011329583298),
        (0.000000000000000, -1.951367322083228, -1.206011329583298),
        (0.690983005625053, 1.118033988749895, 1.809016994374947),
        (0.690983005625053, 1.118033988749895, -1.809016994374947),
        (0.690983005625053, -1.118033988749895, 1.809016994374947),
        (0.690983005625053, -1.118033988749895, -1.809016994374947),
        (-0.690983005625053, 1.118033988749895, 1.809016994374947),
        (-0.690983005625053, 1.118033988749895, -1.809016994374947),
        (-0.690983005625053, -1.118033988749895, 1.809016994374947),
        (-0.690983005625053, -1.118033988749895, -1.809016994374947),
        (1.809016994374947, 0.690983005625053, 1.118033988749895),
        (1.809016994374947, 0.690983005625053, -1.118033988749895),
        (1.809016994374947, -0.690983005625053, 1.118033988749895),
        (1.809016994374947, -0.690983005625053, -1.118033988749895),
        (-1.809016994374947, 0.690983005625053, 1.118033988749895),
        (-1.809016994374947, 0.690983005625053, -1.118033988749895),
        (-1.809016994374947, -0.690983005625053, 1.118033988749895),
        (-1.809016994374947, -0.690983005625053, -1.118033988749895),
        (1.118033988749895, 1.809016994374947, 0.690983005625053),
        (1.118033988749895, 1.809016994374947, -0.690983005625053),
        (1.118033988749895, -1.809016994374947, 0.690983005625053),
        (1.118033988749895, -1.809016994374947, -0.690983005625053),
        (-1.118033988749895, 1.809016994374947, 0.690983005625053),
        (-1.118033988749895, 1.809016994374947, -0.690983005625053),
        (-1.118033988749895, -1.809016994374947, 0.690983005625053),
        (-1.118033988749895, -1.809016994374947, -0.690983005625053),
        (1.267661082727196, 1.267661082727196, 1.267661082727196),
        (1.267661082727196, 1.267661082727196, -1.267661082727196),
        (1.267661082727196, -1.267661082727196, 1.267661082727196),
        (1.267661082727196, -1.267661082727196, -1.267661082727196),
        (-1.267661082727196, 1.267661082727196, 1.267661082727196),
        (-1.267661082727196, 1.267661082727196, -1.267661082727196),
        (-1.267661082727196, -1.267661082727196, 1.267661082727196),
        (-1.267661082727196, -1.267661082727196, -1.267661082727196),
    ])

def LpentagonalHexecontahedron():
    return np.array([
        (-0.192893711352359, -0.218483370127321, -2.097053835252088),
        (-0.192893711352359, 0.218483370127321, 2.097053835252088),
        (0.192893711352359, 0.218483370127321, -2.097053835252088),
        (0.192893711352359, -0.218483370127321, 2.097053835252088),
        (-2.097053835252088, -0.192893711352359, -0.218483370127321),
        (-2.097053835252088, 0.192893711352359, 0.218483370127321),
        (2.097053835252088, 0.192893711352359, -0.218483370127321),
        (2.097053835252088, -0.192893711352359, 0.218483370127321),
        (-0.218483370127321, -2.097053835252088, -0.192893711352359),
        (-0.218483370127321, 2.097053835252088, 0.192893711352359),
        (0.218483370127321, 2.097053835252088, -0.192893711352359),
        (0.218483370127321, -2.097053835252088, 0.192893711352359),
        (0.000000000000000, -0.755467260516596, -1.977838965420219),
        (0.000000000000000, -0.755467260516596, 1.977838965420219),
        (0.000000000000000, 0.755467260516596, -1.977838965420219),
        (0.000000000000000, 0.755467260516596, 1.977838965420219),
        (-1.977838965420219, 0.000000000000000, -0.755467260516596),
        (-1.977838965420219, 0.000000000000000, 0.755467260516596),
        (1.977838965420219, 0.000000000000000, -0.755467260516596),
        (1.977838965420219, 0.000000000000000, 0.755467260516596),
        (-0.755467260516596, -1.977838965420219, 0.000000000000000),
        (-0.755467260516596, 1.977838965420219, 0.000000000000000),
        (0.755467260516596, -1.977838965420219, 0.000000000000000),
        (0.755467260516596, 1.977838965420219, 0.000000000000000),
        (-1.167123436475334, 0.000000000000000, -1.888445389283669),
        (-1.167123436475334, 0.000000000000000, 1.888445389283669),
        (1.167123436475334, 0.000000000000000, -1.888445389283669),
        (1.167123436475334, 0.000000000000000, 1.888445389283669),
        (-1.888445389283669, -1.167123436475334, 0.000000000000000),
        (-1.888445389283669, 1.167123436475334, 0.000000000000000),
        (1.888445389283669, -1.167123436475334, 0.000000000000000),
        (1.888445389283669, 1.167123436475334, 0.000000000000000),
        (0.000000000000000, -1.888445389283669, -1.167123436475334),
        (0.000000000000000, -1.888445389283669, 1.167123436475334),
        (0.000000000000000, 1.888445389283669, -1.167123436475334),
        (0.000000000000000, 1.888445389283669, 1.167123436475334),
        (-0.567715369466921, 0.824957552676276, -1.865401310817696),
        (-0.567715369466921, -0.824957552676276, 1.865401310817696),
        (0.567715369466921, -0.824957552676276, -1.865401310817696),
        (0.567715369466921, 0.824957552676276, 1.865401310817696),
        (-1.865401310817696, 0.567715369466921, -0.824957552676276),
        (-1.865401310817696, -0.567715369466921, 0.824957552676276),
        (1.865401310817696, -0.567715369466921, -0.824957552676276),
        (1.865401310817696, 0.567715369466921, 0.824957552676276),
        (-0.824957552676276, 1.865401310817696, -0.567715369466921),
        (-0.824957552676276, -1.865401310817696, 0.567715369466921),
        (0.824957552676276, -1.865401310817696, -0.567715369466921),
        (0.824957552676276, 1.865401310817696, 0.567715369466921),
        (-0.374821658114562, -1.137066133860504, -1.746186440985826),
        (-0.374821658114562, 1.137066133860504, 1.746186440985826),
        (0.374821658114562, 1.137066133860504, -1.746186440985826),
        (0.374821658114562, -1.137066133860504, 1.746186440985826),
        (-1.746186440985826, -0.374821658114562, -1.137066133860504),
        (-1.746186440985826, 0.374821658114562, 1.137066133860504),
        (1.746186440985826, 0.374821658114562, -1.137066133860504),
        (1.746186440985826, -0.374821658114562, 1.137066133860504),
        (-1.137066133860504, -1.746186440985826, -0.374821658114562),
        (-1.137066133860504, 1.746186440985826, 0.374821658114562),
        (1.137066133860504, 1.746186440985826, -0.374821658114562),
        (1.137066133860504, -1.746186440985826, 0.374821658114562),
        (-0.921228888309551, -0.959987701391584, -1.646917940690374),
        (-0.921228888309551, 0.959987701391584, 1.646917940690374),
        (0.921228888309551, 0.959987701391584, -1.646917940690374),
        (0.921228888309551, -0.959987701391584, 1.646917940690374),
        (-1.646917940690374, -0.921228888309551, -0.959987701391584),
        (-1.646917940690374, 0.921228888309551, 0.959987701391584),
        (1.646917940690374, 0.921228888309551, -0.959987701391584),
        (1.646917940690374, -0.921228888309551, 0.959987701391584),
        (-0.959987701391584, -1.646917940690374, -0.921228888309551),
        (-0.959987701391584, 1.646917940690374, 0.921228888309551),
        (0.959987701391584, 1.646917940690374, -0.921228888309551),
        (0.959987701391584, -1.646917940690374, 0.921228888309551),
        (-0.728335176957192, 1.272096282575812, -1.527703070858505),
        (-0.728335176957192, -1.272096282575812, 1.527703070858505),
        (0.728335176957192, -1.272096282575812, -1.527703070858505),
        (0.728335176957192, 1.272096282575812, 1.527703070858505),
        (-1.527703070858505, 0.728335176957192, -1.272096282575812),
        (-1.527703070858505, -0.728335176957192, 1.272096282575812),
        (1.527703070858505, -0.728335176957192, -1.272096282575812),
        (1.527703070858505, 0.728335176957192, 1.272096282575812),
        (-1.272096282575812, 1.527703070858505, -0.728335176957192),
        (-1.272096282575812, -1.527703070858505, 0.728335176957192),
        (1.272096282575812, -1.527703070858505, -0.728335176957192),
        (1.272096282575812, 1.527703070858505, 0.728335176957192),
        (-1.222371704903623, -1.222371704903623, -1.222371704903623),
        (-1.222371704903623, -1.222371704903623, 1.222371704903623),
        (-1.222371704903623, 1.222371704903623, -1.222371704903623),
        (-1.222371704903623, 1.222371704903623, 1.222371704903623),
        (1.222371704903623, -1.222371704903623, -1.222371704903623),
        (1.222371704903623, -1.222371704903623, 1.222371704903623),
        (1.222371704903623, 1.222371704903623, -1.222371704903623),
        (1.222371704903623, 1.222371704903623, 1.222371704903623),
    ])

def DisdyakisTriacontahedron():
    return np.array([
        (0.000000000000000, 0.000000000000000, 3.802983248181589),
        (0.000000000000000, 0.000000000000000, -3.802983248181589),
        (3.802983248181589, 0.000000000000000, 0.000000000000000),
        (-3.802983248181589, 0.000000000000000, 0.000000000000000),
        (0.000000000000000, 3.802983248181589, 0.000000000000000),
        (0.000000000000000, -3.802983248181589, 0.000000000000000),
        (0.000000000000000, 1.381966011250105, 3.618033988749895),
        (0.000000000000000, 1.381966011250105, -3.618033988749895),
        (0.000000000000000, -1.381966011250105, 3.618033988749895),
        (0.000000000000000, -1.381966011250105, -3.618033988749895),
        (3.618033988749895, 0.000000000000000, 1.381966011250105),
        (3.618033988749895, 0.000000000000000, -1.381966011250105),
        (-3.618033988749895, 0.000000000000000, 1.381966011250105),
        (-3.618033988749895, 0.000000000000000, -1.381966011250105),
        (1.381966011250105, 3.618033988749895, 0.000000000000000),
        (1.381966011250105, -3.618033988749895, 0.000000000000000),
        (-1.381966011250105, 3.618033988749895, 0.000000000000000),
        (-1.381966011250105, -3.618033988749895, 0.000000000000000),
        (2.170820393249937, 0.000000000000000, 3.512461179749811),
        (2.170820393249937, 0.000000000000000, -3.512461179749811),
        (-2.170820393249937, 0.000000000000000, 3.512461179749811),
        (-2.170820393249937, 0.000000000000000, -3.512461179749811),
        (3.512461179749811, 2.170820393249937, 0.000000000000000),
        (3.512461179749811, -2.170820393249937, 0.000000000000000),
        (-3.512461179749811, 2.170820393249937, 0.000000000000000),
        (-3.512461179749811, -2.170820393249937, 0.000000000000000),
        (0.000000000000000, 3.512461179749811, 2.170820393249937),
        (0.000000000000000, 3.512461179749811, -2.170820393249937),
        (0.000000000000000, -3.512461179749811, 2.170820393249937),
        (0.000000000000000, -3.512461179749811, -2.170820393249937),
        (1.175186453011349, 1.901491624090794, 3.076678077102144),
        (1.175186453011349, 1.901491624090794, -3.076678077102144),
        (1.175186453011349, -1.901491624090794, 3.076678077102144),
        (1.175186453011349, -1.901491624090794, -3.076678077102144),
        (-1.175186453011349, 1.901491624090794, 3.076678077102144),
        (-1.175186453011349, 1.901491624090794, -3.076678077102144),
        (-1.175186453011349, -1.901491624090794, 3.076678077102144),
        (-1.175186453011349, -1.901491624090794, -3.076678077102144),
        (3.076678077102144, 1.175186453011349, 1.901491624090794),
        (3.076678077102144, 1.175186453011349, -1.901491624090794),
        (3.076678077102144, -1.175186453011349, 1.901491624090794),
        (3.076678077102144, -1.175186453011349, -1.901491624090794),
        (-3.076678077102144, 1.175186453011349, 1.901491624090794),
        (-3.076678077102144, 1.175186453011349, -1.901491624090794),
        (-3.076678077102144, -1.175186453011349, 1.901491624090794),
        (-3.076678077102144, -1.175186453011349, -1.901491624090794),
        (1.901491624090794, 3.076678077102144, 1.175186453011349),
        (1.901491624090794, 3.076678077102144, -1.175186453011349),
        (1.901491624090794, -3.076678077102144, 1.175186453011349),
        (1.901491624090794, -3.076678077102144, -1.175186453011349),
        (-1.901491624090794, 3.076678077102144, 1.175186453011349),
        (-1.901491624090794, 3.076678077102144, -1.175186453011349),
        (-1.901491624090794, -3.076678077102144, 1.175186453011349),
        (-1.901491624090794, -3.076678077102144, -1.175186453011349),
        (2.236067977499790, 2.236067977499790, 2.236067977499790),
        (2.236067977499790, 2.236067977499790, -2.236067977499790),
        (2.236067977499790, -2.236067977499790, 2.236067977499790),
        (2.236067977499790, -2.236067977499790, -2.236067977499790),
        (-2.236067977499790, 2.236067977499790, 2.236067977499790),
        (-2.236067977499790, 2.236067977499790, -2.236067977499790),
        (-2.236067977499790, -2.236067977499790, 2.236067977499790),
        (-2.236067977499790, -2.236067977499790, -2.236067977499790),
    ])

def RhombicTriacontahedron():
    return np.array([
        (0.904508497187474, 0.000000000000000, 1.463525491562421),
        (0.904508497187474, 0.000000000000000, -1.463525491562421),
        (-0.904508497187474, 0.000000000000000, 1.463525491562421),
        (-0.904508497187474, 0.000000000000000, -1.463525491562421),
        (1.463525491562421, 0.904508497187474, 0.000000000000000),
        (1.463525491562421, -0.904508497187474, 0.000000000000000),
        (-1.463525491562421, 0.904508497187474, 0.000000000000000),
        (-1.463525491562421, -0.904508497187474, 0.000000000000000),
        (0.000000000000000, 1.463525491562421, 0.904508497187474),
        (0.000000000000000, 1.463525491562421, -0.904508497187474),
        (0.000000000000000, -1.463525491562421, 0.904508497187474),
        (0.000000000000000, -1.463525491562421, -0.904508497187474),
        (0.000000000000000, 0.559016994374947, 1.463525491562421),
        (0.000000000000000, 0.559016994374947, -1.463525491562421),
        (0.000000000000000, -0.559016994374947, 1.463525491562421),
        (0.000000000000000, -0.559016994374947, -1.463525491562421),
        (1.463525491562421, 0.000000000000000, 0.559016994374947),
        (1.463525491562421, 0.000000000000000, -0.559016994374947),
        (-1.463525491562421, 0.000000000000000, 0.559016994374947),
        (-1.463525491562421, 0.000000000000000, -0.559016994374947),
        (0.559016994374947, 1.463525491562421, 0.000000000000000),
        (0.559016994374947, -1.463525491562421, 0.000000000000000),
        (-0.559016994374947, 1.463525491562421, 0.000000000000000),
        (-0.559016994374947, -1.463525491562421, 0.000000000000000),
        (0.904508497187474, 0.904508497187474, 0.904508497187474),
        (0.904508497187474, 0.904508497187474, -0.904508497187474),
        (0.904508497187474, -0.904508497187474, 0.904508497187474),
        (0.904508497187474, -0.904508497187474, -0.904508497187474),
        (-0.904508497187474, 0.904508497187474, 0.904508497187474),
        (-0.904508497187474, 0.904508497187474, -0.904508497187474),
        (-0.904508497187474, -0.904508497187474, 0.904508497187474),
        (-0.904508497187474, -0.904508497187474, -0.904508497187474),
    ])

def LpentagonalIcositetrahedron():
    return np.array([
        (0.000000000000000, 0.000000000000000, -1.361410151926443),
        (0.000000000000000, 0.000000000000000, 1.361410151926443),
        (-1.361410151926443, 0.000000000000000, 0.000000000000000),
        (1.361410151926443, 0.000000000000000, 0.000000000000000),
        (0.000000000000000, -1.361410151926443, 0.000000000000000),
        (0.000000000000000, 1.361410151926443, 0.000000000000000),
        (-0.740183741369857, 0.218796643000480, -1.023656178112690),
        (-0.740183741369857, -0.218796643000480, 1.023656178112690),
        (0.740183741369857, -0.218796643000480, -1.023656178112690),
        (0.740183741369857, 0.218796643000480, 1.023656178112690),
        (-1.023656178112690, 0.740183741369857, -0.218796643000480),
        (-1.023656178112690, -0.740183741369857, 0.218796643000480),
        (1.023656178112690, -0.740183741369857, -0.218796643000480),
        (1.023656178112690, 0.740183741369857, 0.218796643000480),
        (-0.218796643000480, 1.023656178112690, -0.740183741369857),
        (-0.218796643000480, -1.023656178112690, 0.740183741369857),
        (0.218796643000480, -1.023656178112690, -0.740183741369857),
        (0.218796643000480, 1.023656178112690, 0.740183741369857),
        (-0.218796643000480, -0.740183741369857, -1.023656178112690),
        (-0.218796643000480, 0.740183741369857, 1.023656178112690),
        (0.218796643000480, 0.740183741369857, -1.023656178112690),
        (0.218796643000480, -0.740183741369857, 1.023656178112690),
        (-1.023656178112690, -0.218796643000480, -0.740183741369857),
        (-1.023656178112690, 0.218796643000480, 0.740183741369857),
        (1.023656178112690, 0.218796643000480, -0.740183741369857),
        (1.023656178112690, -0.218796643000480, 0.740183741369857),
        (-0.740183741369857, -1.023656178112690, -0.218796643000480),
        (-0.740183741369857, 1.023656178112690, 0.218796643000480),
        (0.740183741369857, 1.023656178112690, -0.218796643000480),
        (0.740183741369857, -1.023656178112690, 0.218796643000480),
        (-0.740183741369857, -0.740183741369857, -0.740183741369857),
        (-0.740183741369857, -0.740183741369857, 0.740183741369857),
        (-0.740183741369857, 0.740183741369857, -0.740183741369857),
        (-0.740183741369857, 0.740183741369857, 0.740183741369857),
        (0.740183741369857, -0.740183741369857, -0.740183741369857),
        (0.740183741369857, -0.740183741369857, 0.740183741369857),
        (0.740183741369857, 0.740183741369857, -0.740183741369857),
        (0.740183741369857, 0.740183741369857, 0.740183741369857),
    ])

def DisdyakisDodecahedron():
    return np.array([
        (0.000000000000000, 0.000000000000000, 2.675417437336836),
        (0.000000000000000, 0.000000000000000, -2.675417437336836),
        (2.675417437336836, 0.000000000000000, 0.000000000000000),
        (-2.675417437336836, 0.000000000000000, 0.000000000000000),
        (0.000000000000000, 2.675417437336836, 0.000000000000000),
        (0.000000000000000, -2.675417437336836, 0.000000000000000),
        (1.640754482034081, 0.000000000000000, 1.640754482034081),
        (1.640754482034081, 0.000000000000000, -1.640754482034081),
        (-1.640754482034081, 0.000000000000000, 1.640754482034081),
        (-1.640754482034081, 0.000000000000000, -1.640754482034081),
        (1.640754482034081, 1.640754482034081, 0.000000000000000),
        (1.640754482034081, -1.640754482034081, 0.000000000000000),
        (-1.640754482034081, 1.640754482034081, 0.000000000000000),
        (-1.640754482034081, -1.640754482034081, 0.000000000000000),
        (0.000000000000000, 1.640754482034081, 1.640754482034081),
        (0.000000000000000, 1.640754482034081, -1.640754482034081),
        (0.000000000000000, -1.640754482034081, 1.640754482034081),
        (0.000000000000000, -1.640754482034081, -1.640754482034081),
        (1.414213562373095, 1.414213562373095, 1.414213562373095),
        (1.414213562373095, 1.414213562373095, -1.414213562373095),
        (1.414213562373095, -1.414213562373095, 1.414213562373095),
        (1.414213562373095, -1.414213562373095, -1.414213562373095),
        (-1.414213562373095, 1.414213562373095, 1.414213562373095),
        (-1.414213562373095, 1.414213562373095, -1.414213562373095),
        (-1.414213562373095, -1.414213562373095, 1.414213562373095),
        (-1.414213562373095, -1.414213562373095, -1.414213562373095),
    ])

def TriakisIcosahedron():
    return np.array([
        (1.809016994374947, 0.000000000000000, 2.927050983124842),
        (1.809016994374947, 0.000000000000000, -2.927050983124842),
        (-1.809016994374947, 0.000000000000000, 2.927050983124842),
        (-1.809016994374947, 0.000000000000000, -2.927050983124842),
        (2.927050983124842, 1.809016994374947, 0.000000000000000),
        (2.927050983124842, -1.809016994374947, 0.000000000000000),
        (-2.927050983124842, 1.809016994374947, 0.000000000000000),
        (-2.927050983124842, -1.809016994374947, 0.000000000000000),
        (0.000000000000000, 2.927050983124842, 1.809016994374947),
        (0.000000000000000, 2.927050983124842, -1.809016994374947),
        (0.000000000000000, -2.927050983124842, 1.809016994374947),
        (0.000000000000000, -2.927050983124842, -1.809016994374947),
        (0.000000000000000, 1.049553179261340, 2.747765896306699),
        (0.000000000000000, 1.049553179261340, -2.747765896306699),
        (0.000000000000000, -1.049553179261340, 2.747765896306699),
        (0.000000000000000, -1.049553179261340, -2.747765896306699),
        (2.747765896306699, 0.000000000000000, 1.049553179261340),
        (2.747765896306699, 0.000000000000000, -1.049553179261340),
        (-2.747765896306699, 0.000000000000000, 1.049553179261340),
        (-2.747765896306699, 0.000000000000000, -1.049553179261340),
        (1.049553179261340, 2.747765896306699, 0.000000000000000),
        (1.049553179261340, -2.747765896306699, 0.000000000000000),
        (-1.049553179261340, 2.747765896306699, 0.000000000000000),
        (-1.049553179261340, -2.747765896306699, 0.000000000000000),
        (1.698212717045359, 1.698212717045359, 1.698212717045359),
        (1.698212717045359, 1.698212717045359, -1.698212717045359),
        (1.698212717045359, -1.698212717045359, 1.698212717045359),
        (1.698212717045359, -1.698212717045359, -1.698212717045359),
        (-1.698212717045359, 1.698212717045359, 1.698212717045359),
        (-1.698212717045359, 1.698212717045359, -1.698212717045359),
        (-1.698212717045359, -1.698212717045359, 1.698212717045359),
        (-1.698212717045359, -1.698212717045359, -1.698212717045359),
    ])

def DeltoidalIcositetrahedron():
    return np.array([
        (0.000000000000000, 0.000000000000000, 1.414213562373095),
        (0.000000000000000, 0.000000000000000, -1.414213562373095),
        (1.414213562373095, 0.000000000000000, 0.000000000000000),
        (-1.414213562373095, 0.000000000000000, 0.000000000000000),
        (0.000000000000000, 1.414213562373095, 0.000000000000000),
        (0.000000000000000, -1.414213562373095, 0.000000000000000),
        (1.000000000000000, 0.000000000000000, 1.000000000000000),
        (1.000000000000000, 0.000000000000000, -1.000000000000000),
        (-1.000000000000000, 0.000000000000000, 1.000000000000000),
        (-1.000000000000000, 0.000000000000000, -1.000000000000000),
        (1.000000000000000, 1.000000000000000, 0.000000000000000),
        (1.000000000000000, -1.000000000000000, 0.000000000000000),
        (-1.000000000000000, 1.000000000000000, 0.000000000000000),
        (-1.000000000000000, -1.000000000000000, 0.000000000000000),
        (0.000000000000000, 1.000000000000000, 1.000000000000000),
        (0.000000000000000, 1.000000000000000, -1.000000000000000),
        (0.000000000000000, -1.000000000000000, 1.000000000000000),
        (0.000000000000000, -1.000000000000000, -1.000000000000000),
        (0.773459080339014, 0.773459080339014, 0.773459080339014),
        (0.773459080339014, 0.773459080339014, -0.773459080339014),
        (0.773459080339014, -0.773459080339014, 0.773459080339014),
        (0.773459080339014, -0.773459080339014, -0.773459080339014),
        (-0.773459080339014, 0.773459080339014, 0.773459080339014),
        (-0.773459080339014, 0.773459080339014, -0.773459080339014),
        (-0.773459080339014, -0.773459080339014, 0.773459080339014),
        (-0.773459080339014, -0.773459080339014, -0.773459080339014),
    ])

def TriakisOctahedron():
    return np.array([
        (0.000000000000000, 0.000000000000000, 2.414213562373095),
        (0.000000000000000, 0.000000000000000, -2.414213562373095),
        (2.414213562373095, 0.000000000000000, 0.000000000000000),
        (-2.414213562373095, 0.000000000000000, 0.000000000000000),
        (0.000000000000000, 2.414213562373095, 0.000000000000000),
        (0.000000000000000, -2.414213562373095, 0.000000000000000),
        (1.000000000000000, 1.000000000000000, 1.000000000000000),
        (1.000000000000000, 1.000000000000000, -1.000000000000000),
        (1.000000000000000, -1.000000000000000, 1.000000000000000),
        (1.000000000000000, -1.000000000000000, -1.000000000000000),
        (-1.000000000000000, 1.000000000000000, 1.000000000000000),
        (-1.000000000000000, 1.000000000000000, -1.000000000000000),
        (-1.000000000000000, -1.000000000000000, 1.000000000000000),
        (-1.000000000000000, -1.000000000000000, -1.000000000000000),
    ])

