import numpy as np

def ParabigyrateRhombicosidodecahedron():
    return np.array([
        (0.500000000000000, 0.500000000000000, 2.118033988749895),
        (0.500000000000000, 0.500000000000000, -2.118033988749895),
        (0.500000000000000, -0.500000000000000, 2.118033988749895),
        (0.500000000000000, -0.500000000000000, -2.118033988749895),
        (-0.500000000000000, 0.500000000000000, 2.118033988749895),
        (-0.500000000000000, 0.500000000000000, -2.118033988749895),
        (-0.500000000000000, -0.500000000000000, 2.118033988749895),
        (-0.500000000000000, -0.500000000000000, -2.118033988749895),
        (2.118033988749895, 0.500000000000000, 0.500000000000000),
        (2.118033988749895, 0.500000000000000, -0.500000000000000),
        (2.118033988749895, -0.500000000000000, 0.500000000000000),
        (2.118033988749895, -0.500000000000000, -0.500000000000000),
        (-2.118033988749895, 0.500000000000000, 0.500000000000000),
        (-2.118033988749895, 0.500000000000000, -0.500000000000000),
        (-2.118033988749895, -0.500000000000000, 0.500000000000000),
        (-2.118033988749895, -0.500000000000000, -0.500000000000000),
        (0.500000000000000, 1.394427190999916, 1.670820393249937),
        (0.500000000000000, 2.118033988749895, -0.500000000000000),
        (0.500000000000000, -2.118033988749895, 0.500000000000000),
        (0.500000000000000, -1.394427190999916, -1.670820393249937),
        (-0.500000000000000, 1.394427190999916, 1.670820393249937),
        (-0.500000000000000, 2.118033988749895, -0.500000000000000),
        (-0.500000000000000, -2.118033988749895, 0.500000000000000),
        (-0.500000000000000, -1.394427190999916, -1.670820393249937),
        (0.000000000000000, 2.203444185374863, 0.361803398874989),
        (0.000000000000000, 1.309016994374947, -1.809016994374947),
        (0.000000000000000, -1.309016994374947, 1.809016994374947),
        (0.000000000000000, -2.203444185374863, -0.361803398874989),
        (1.809016994374947, 0.000000000000000, 1.309016994374947),
        (1.809016994374947, 0.000000000000000, -1.309016994374947),
        (-1.809016994374947, 0.000000000000000, 1.309016994374947),
        (-1.809016994374947, 0.000000000000000, -1.309016994374947),
        (1.309016994374947, 1.809016994374947, 0.000000000000000),
        (1.309016994374947, -1.809016994374947, 0.000000000000000),
        (-1.309016994374947, 1.809016994374947, 0.000000000000000),
        (-1.309016994374947, -1.809016994374947, 0.000000000000000),
        (1.309016994374947, 0.809016994374947, 1.618033988749895),
        (1.309016994374947, 0.809016994374947, -1.618033988749895),
        (1.309016994374947, -0.809016994374947, 1.618033988749895),
        (1.309016994374947, -0.809016994374947, -1.618033988749895),
        (-1.309016994374947, 0.809016994374947, 1.618033988749895),
        (-1.309016994374947, 0.809016994374947, -1.618033988749895),
        (-1.309016994374947, -0.809016994374947, 1.618033988749895),
        (-1.309016994374947, -0.809016994374947, -1.618033988749895),
        (1.618033988749895, 1.309016994374947, 0.809016994374947),
        (1.618033988749895, 1.309016994374947, -0.809016994374947),
        (1.618033988749895, -1.309016994374947, 0.809016994374947),
        (1.618033988749895, -1.309016994374947, -0.809016994374947),
        (-1.618033988749895, 1.309016994374947, 0.809016994374947),
        (-1.618033988749895, 1.309016994374947, -0.809016994374947),
        (-1.618033988749895, -1.309016994374947, 0.809016994374947),
        (-1.618033988749895, -1.309016994374947, -0.809016994374947),
        (0.809016994374947, 1.894427190999916, 0.861803398874989),
        (0.809016994374947, 1.618033988749895, -1.309016994374947),
        (0.809016994374947, -1.618033988749895, 1.309016994374947),
        (0.809016994374947, -1.894427190999916, -0.861803398874989),
        (-0.809016994374947, 1.894427190999916, 0.861803398874989),
        (-0.809016994374947, 1.618033988749895, -1.309016994374947),
        (-0.809016994374947, -1.618033988749895, 1.309016994374947),
        (-0.809016994374947, -1.894427190999916, -0.861803398874989),
    ])

def GyrateBidiminishedRhombicosidodecahedron():
    return np.array([
        (0.500000000000000, 0.500000000000000, 2.118033988749895),
        (0.500000000000000, 0.500000000000000, -2.118033988749895),
        (0.500000000000000, -0.500000000000000, 2.118033988749895),
        (0.500000000000000, -0.500000000000000, -2.118033988749895),
        (-0.500000000000000, 0.500000000000000, 2.118033988749895),
        (-0.500000000000000, 0.500000000000000, -2.118033988749895),
        (-0.500000000000000, -0.500000000000000, 2.118033988749895),
        (-0.500000000000000, -0.500000000000000, -2.118033988749895),
        (2.118033988749895, 0.500000000000000, 0.500000000000000),
        (2.118033988749895, 0.500000000000000, -0.500000000000000),
        (-2.118033988749895, 0.500000000000000, 0.500000000000000),
        (-2.118033988749895, 0.500000000000000, -0.500000000000000),
        (0.500000000000000, 1.394427190999916, 1.670820393249937),
        (0.500000000000000, 2.118033988749895, -0.500000000000000),
        (0.500000000000000, -2.118033988749895, 0.500000000000000),
        (0.500000000000000, -2.118033988749895, -0.500000000000000),
        (-0.500000000000000, 1.394427190999916, 1.670820393249937),
        (-0.500000000000000, 2.118033988749895, -0.500000000000000),
        (-0.500000000000000, -2.118033988749895, 0.500000000000000),
        (-0.500000000000000, -2.118033988749895, -0.500000000000000),
        (0.000000000000000, 2.203444185374863, 0.361803398874989),
        (0.000000000000000, 1.309016994374947, -1.809016994374947),
        (0.000000000000000, -1.309016994374947, 1.809016994374947),
        (0.000000000000000, -1.309016994374947, -1.809016994374947),
        (1.809016994374947, 0.000000000000000, 1.309016994374947),
        (1.809016994374947, 0.000000000000000, -1.309016994374947),
        (-1.809016994374947, 0.000000000000000, 1.309016994374947),
        (-1.809016994374947, 0.000000000000000, -1.309016994374947),
        (1.309016994374947, 1.809016994374947, 0.000000000000000),
        (-1.309016994374947, 1.809016994374947, 0.000000000000000),
        (1.309016994374947, 0.809016994374947, 1.618033988749895),
        (1.309016994374947, 0.809016994374947, -1.618033988749895),
        (1.309016994374947, -0.809016994374947, 1.618033988749895),
        (1.309016994374947, -0.809016994374947, -1.618033988749895),
        (-1.309016994374947, 0.809016994374947, 1.618033988749895),
        (-1.309016994374947, 0.809016994374947, -1.618033988749895),
        (-1.309016994374947, -0.809016994374947, 1.618033988749895),
        (-1.309016994374947, -0.809016994374947, -1.618033988749895),
        (1.618033988749895, 1.309016994374947, 0.809016994374947),
        (1.618033988749895, 1.309016994374947, -0.809016994374947),
        (-1.618033988749895, 1.309016994374947, 0.809016994374947),
        (-1.618033988749895, 1.309016994374947, -0.809016994374947),
        (0.809016994374947, 1.894427190999916, 0.861803398874989),
        (0.809016994374947, 1.618033988749895, -1.309016994374947),
        (0.809016994374947, -1.618033988749895, 1.309016994374947),
        (0.809016994374947, -1.618033988749895, -1.309016994374947),
        (-0.809016994374947, 1.894427190999916, 0.861803398874989),
        (-0.809016994374947, 1.618033988749895, -1.309016994374947),
        (-0.809016994374947, -1.618033988749895, 1.309016994374947),
        (-0.809016994374947, -1.618033988749895, -1.309016994374947),
    ])

def AugmentedDodecahedron():
    return np.array([
        (0.000000000000000, 0.500000000000000, 1.309016994374947),
        (0.000000000000000, 0.500000000000000, -1.309016994374947),
        (0.000000000000000, -0.500000000000000, 1.309016994374947),
        (0.000000000000000, -0.500000000000000, -1.309016994374947),
        (1.309016994374947, 0.000000000000000, 0.500000000000000),
        (1.309016994374947, 0.000000000000000, -0.500000000000000),
        (-1.309016994374947, 0.000000000000000, 0.500000000000000),
        (-1.309016994374947, 0.000000000000000, -0.500000000000000),
        (0.500000000000000, 1.309016994374947, 0.000000000000000),
        (0.500000000000000, -1.309016994374947, 0.000000000000000),
        (-0.500000000000000, 1.309016994374947, 0.000000000000000),
        (-0.500000000000000, -1.309016994374947, 0.000000000000000),
        (0.809016994374947, 0.809016994374947, 0.809016994374947),
        (0.809016994374947, 0.809016994374947, -0.809016994374947),
        (0.809016994374947, -0.809016994374947, 0.809016994374947),
        (0.809016994374947, -0.809016994374947, -0.809016994374947),
        (-0.809016994374947, 0.809016994374947, 0.809016994374947),
        (-0.809016994374947, 0.809016994374947, -0.809016994374947),
        (-0.809016994374947, -0.809016994374947, 0.809016994374947),
        (-0.809016994374947, -0.809016994374947, -0.809016994374947),
        (0.000000000000000, 1.394427190999916, 0.861803398874989),
    ])

def TriangularHebesphenorotunda():
    return np.array([
        (1.237398367265553, -0.380635621484342, -0.380635621484342),
        (-0.380635621484342, 1.237398367265553, -0.380635621484342),
        (-0.380635621484342, -0.380635621484342, 1.237398367265553),
        (0.928381372890605, 0.428381372890605, -0.880635621484342),
        (-0.880635621484342, 0.928381372890605, 0.428381372890605),
        (0.428381372890605, -0.880635621484342, 0.928381372890605),
        (0.428381372890605, -0.880635621484342, -0.689652615859290),
        (-0.689652615859290, 0.428381372890605, -0.880635621484342),
        (-0.880635621484342, -0.689652615859290, 0.428381372890605),
        (0.119364378515658, -0.071618627109395, -1.189652615859289),
        (-1.189652615859289, 0.119364378515658, -0.071618627109395),
        (-0.071618627109395, -1.189652615859289, 0.119364378515658),
        (0.928381372890605, 0.428381372890605, 0.119364378515658),
        (0.119364378515658, 0.928381372890605, 0.428381372890605),
        (0.428381372890605, 0.119364378515658, 0.928381372890605),
        (0.928381372890605, -1.189652615859289, 0.119364378515658),
        (0.119364378515658, 0.928381372890605, -1.189652615859289),
        (-1.189652615859289, 0.119364378515658, 0.928381372890605),
    ])

def TriaugmentedHexagonalPrism():
    return np.array([
        (1.000000000000000, 0.000000000000000, 0.500000000000000),
        (1.000000000000000, 0.000000000000000, -0.500000000000000),
        (-1.000000000000000, 0.000000000000000, 0.500000000000000),
        (-1.000000000000000, 0.000000000000000, -0.500000000000000),
        (0.500000000000000, 0.866025403784439, 0.500000000000000),
        (0.500000000000000, 0.866025403784439, -0.500000000000000),
        (0.500000000000000, -0.866025403784439, 0.500000000000000),
        (0.500000000000000, -0.866025403784439, -0.500000000000000),
        (-0.500000000000000, 0.866025403784439, 0.500000000000000),
        (-0.500000000000000, 0.866025403784439, -0.500000000000000),
        (-0.500000000000000, -0.866025403784439, 0.500000000000000),
        (-0.500000000000000, -0.866025403784439, -0.500000000000000),
        (1.362372435695794, 0.786566092485493, 0.000000000000000),
        (-1.362372435695794, 0.786566092485493, 0.000000000000000),
        (0.000000000000000, -1.573132184970986, 0.000000000000000),
    ])

def GyroelongatedPentagonalCupolarotunda():
    return np.array([
        (1.618033988749895, 0.000000000000000, 0.431198501929729),
        (-1.618033988749895, 0.000000000000000, 0.431198501929729),
        (0.000000000000000, 1.618033988749895, -0.431198501929729),
        (0.000000000000000, -1.618033988749895, -0.431198501929729),
        (0.500000000000000, 1.538841768587627, 0.431198501929729),
        (0.500000000000000, -1.538841768587627, 0.431198501929729),
        (-0.500000000000000, 1.538841768587627, 0.431198501929729),
        (-0.500000000000000, -1.538841768587627, 0.431198501929729),
        (1.538841768587627, 0.500000000000000, -0.431198501929729),
        (1.538841768587627, -0.500000000000000, -0.431198501929729),
        (-1.538841768587627, 0.500000000000000, -0.431198501929729),
        (-1.538841768587627, -0.500000000000000, -0.431198501929729),
        (1.309016994374947, 0.951056516295154, 0.431198501929729),
        (1.309016994374947, -0.951056516295154, 0.431198501929729),
        (-1.309016994374947, 0.951056516295154, 0.431198501929729),
        (-1.309016994374947, -0.951056516295154, 0.431198501929729),
        (0.951056516295154, 1.309016994374947, -0.431198501929729),
        (0.951056516295154, -1.309016994374947, -0.431198501929729),
        (-0.951056516295154, 1.309016994374947, -0.431198501929729),
        (-0.951056516295154, -1.309016994374947, -0.431198501929729),
        (0.809016994374947, 0.262865556059567, 1.807580422400903),
        (-0.809016994374947, 0.262865556059567, 1.807580422400903),
        (0.500000000000000, -0.688190960235587, 1.807580422400903),
        (-0.500000000000000, -0.688190960235587, 1.807580422400903),
        (0.000000000000000, 0.850650808352040, 1.807580422400903),
        (1.309016994374947, -0.425325404176020, 1.281849310281769),
        (-1.309016994374947, -0.425325404176020, 1.281849310281769),
        (0.809016994374947, 1.113516364411607, 1.281849310281769),
        (-0.809016994374947, 1.113516364411607, 1.281849310281769),
        (0.000000000000000, -1.376381920471174, 1.281849310281769),
        (0.262865556059567, 0.809016994374947, -0.956929614048863),
        (0.262865556059567, -0.809016994374947, -0.956929614048863),
        (-0.688190960235587, 0.500000000000000, -0.956929614048863),
        (-0.688190960235587, -0.500000000000000, -0.956929614048863),
        (0.850650808352040, 0.000000000000000, -0.956929614048863),
    ])

def ParabiaugmentedTruncatedDodecahedron():
    return np.array([
        (0.000000000000000, 0.500000000000000, 2.927050983124842),
        (0.000000000000000, 0.500000000000000, -2.927050983124842),
        (0.000000000000000, -0.500000000000000, 2.927050983124842),
        (0.000000000000000, -0.500000000000000, -2.927050983124842),
        (2.927050983124842, 0.000000000000000, 0.500000000000000),
        (2.927050983124842, 0.000000000000000, -0.500000000000000),
        (-2.927050983124842, 0.000000000000000, 0.500000000000000),
        (-2.927050983124842, 0.000000000000000, -0.500000000000000),
        (0.500000000000000, 2.927050983124842, 0.000000000000000),
        (0.500000000000000, -2.927050983124842, 0.000000000000000),
        (-0.500000000000000, 2.927050983124842, 0.000000000000000),
        (-0.500000000000000, -2.927050983124842, 0.000000000000000),
        (0.500000000000000, 1.309016994374947, 2.618033988749895),
        (0.500000000000000, 1.309016994374947, -2.618033988749895),
        (0.500000000000000, -1.309016994374947, 2.618033988749895),
        (0.500000000000000, -1.309016994374947, -2.618033988749895),
        (-0.500000000000000, 1.309016994374947, 2.618033988749895),
        (-0.500000000000000, 1.309016994374947, -2.618033988749895),
        (-0.500000000000000, -1.309016994374947, 2.618033988749895),
        (-0.500000000000000, -1.309016994374947, -2.618033988749895),
        (2.618033988749895, 0.500000000000000, 1.309016994374947),
        (2.618033988749895, 0.500000000000000, -1.309016994374947),
        (2.618033988749895, -0.500000000000000, 1.309016994374947),
        (2.618033988749895, -0.500000000000000, -1.309016994374947),
        (-2.618033988749895, 0.500000000000000, 1.309016994374947),
        (-2.618033988749895, 0.500000000000000, -1.309016994374947),
        (-2.618033988749895, -0.500000000000000, 1.309016994374947),
        (-2.618033988749895, -0.500000000000000, -1.309016994374947),
        (1.309016994374947, 2.618033988749895, 0.500000000000000),
        (1.309016994374947, 2.618033988749895, -0.500000000000000),
        (1.309016994374947, -2.618033988749895, 0.500000000000000),
        (1.309016994374947, -2.618033988749895, -0.500000000000000),
        (-1.309016994374947, 2.618033988749895, 0.500000000000000),
        (-1.309016994374947, 2.618033988749895, -0.500000000000000),
        (-1.309016994374947, -2.618033988749895, 0.500000000000000),
        (-1.309016994374947, -2.618033988749895, -0.500000000000000),
        (1.309016994374947, 1.618033988749895, 2.118033988749895),
        (1.309016994374947, 1.618033988749895, -2.118033988749895),
        (1.309016994374947, -1.618033988749895, 2.118033988749895),
        (1.309016994374947, -1.618033988749895, -2.118033988749895),
        (-1.309016994374947, 1.618033988749895, 2.118033988749895),
        (-1.309016994374947, 1.618033988749895, -2.118033988749895),
        (-1.309016994374947, -1.618033988749895, 2.118033988749895),
        (-1.309016994374947, -1.618033988749895, -2.118033988749895),
        (2.118033988749895, 1.309016994374947, 1.618033988749895),
        (2.118033988749895, 1.309016994374947, -1.618033988749895),
        (2.118033988749895, -1.309016994374947, 1.618033988749895),
        (2.118033988749895, -1.309016994374947, -1.618033988749895),
        (-2.118033988749895, 1.309016994374947, 1.618033988749895),
        (-2.118033988749895, 1.309016994374947, -1.618033988749895),
        (-2.118033988749895, -1.309016994374947, 1.618033988749895),
        (-2.118033988749895, -1.309016994374947, -1.618033988749895),
        (1.618033988749895, 2.118033988749895, 1.309016994374947),
        (1.618033988749895, 2.118033988749895, -1.309016994374947),
        (1.618033988749895, -2.118033988749895, 1.309016994374947),
        (1.618033988749895, -2.118033988749895, -1.309016994374947),
        (-1.618033988749895, 2.118033988749895, 1.309016994374947),
        (-1.618033988749895, 2.118033988749895, -1.309016994374947),
        (-1.618033988749895, -2.118033988749895, 1.309016994374947),
        (-1.618033988749895, -2.118033988749895, -1.309016994374947),
        (0.809016994374947, -2.703444185374863, 1.361803398874990),
        (0.809016994374947, 2.703444185374863, -1.361803398874990),
        (-0.809016994374947, -2.703444185374863, 1.361803398874990),
        (-0.809016994374947, 2.703444185374863, -1.361803398874990),
        (0.500000000000000, -2.203444185374863, 2.170820393249937),
        (0.500000000000000, 2.203444185374863, -2.170820393249937),
        (-0.500000000000000, -2.203444185374863, 2.170820393249937),
        (-0.500000000000000, 2.203444185374863, -2.170820393249937),
        (0.000000000000000, -3.012461179749811, 0.861803398874989),
        (0.000000000000000, 3.012461179749811, -0.861803398874989),
    ])

def SquareOrthobicupola():
    return np.array([
        (1.207106781186547, 0.500000000000000, 0.000000000000000),
        (1.207106781186547, -0.500000000000000, 0.000000000000000),
        (-1.207106781186547, 0.500000000000000, 0.000000000000000),
        (-1.207106781186547, -0.500000000000000, 0.000000000000000),
        (0.500000000000000, 1.207106781186547, 0.000000000000000),
        (0.500000000000000, -1.207106781186547, 0.000000000000000),
        (-0.500000000000000, 1.207106781186547, 0.000000000000000),
        (-0.500000000000000, -1.207106781186547, 0.000000000000000),
        (0.500000000000000, 0.500000000000000, 0.707106781186548),
        (0.500000000000000, 0.500000000000000, -0.707106781186548),
        (0.500000000000000, -0.500000000000000, 0.707106781186548),
        (0.500000000000000, -0.500000000000000, -0.707106781186548),
        (-0.500000000000000, 0.500000000000000, 0.707106781186548),
        (-0.500000000000000, 0.500000000000000, -0.707106781186548),
        (-0.500000000000000, -0.500000000000000, 0.707106781186548),
        (-0.500000000000000, -0.500000000000000, -0.707106781186548),
    ])

def AugmentedHexagonalPrism():
    return np.array([
        (1.000000000000000, 0.500000000000000, 0.000000000000000),
        (1.000000000000000, -0.500000000000000, 0.000000000000000),
        (-1.000000000000000, 0.500000000000000, 0.000000000000000),
        (-1.000000000000000, -0.500000000000000, 0.000000000000000),
        (0.500000000000000, 0.500000000000000, 0.866025403784439),
        (0.500000000000000, 0.500000000000000, -0.866025403784439),
        (0.500000000000000, -0.500000000000000, 0.866025403784439),
        (0.500000000000000, -0.500000000000000, -0.866025403784439),
        (-0.500000000000000, 0.500000000000000, 0.866025403784439),
        (-0.500000000000000, 0.500000000000000, -0.866025403784439),
        (-0.500000000000000, -0.500000000000000, 0.866025403784439),
        (-0.500000000000000, -0.500000000000000, -0.866025403784439),
        (0.000000000000000, 0.000000000000000, 1.573132184970986),
    ])

def ElongatedTriangularGyrobicupola():
    return np.array([
        (0.995781915781360, -0.418431646591735, 0.288675134594813),
        (-0.995781915781360, 0.418431646591735, -0.288675134594813),
        (-0.288675134594813, -0.995781915781360, 0.418431646591735),
        (0.288675134594813, 0.995781915781360, -0.418431646591735),
        (-0.418431646591735, 0.288675134594813, 0.995781915781360),
        (0.418431646591735, -0.288675134594813, -0.995781915781360),
        (-0.995781915781360, -0.288675134594813, 0.418431646591735),
        (0.995781915781360, 0.288675134594813, -0.418431646591735),
        (-0.418431646591735, 0.995781915781360, 0.288675134594813),
        (0.418431646591735, -0.995781915781360, -0.288675134594813),
        (0.288675134594813, -0.418431646591735, 0.995781915781360),
        (-0.288675134594813, 0.418431646591735, -0.995781915781360),
        (0.288675134594813, 0.995781915781360, 0.995781915781360),
        (-0.288675134594813, -0.995781915781360, -0.995781915781360),
        (0.995781915781360, 0.288675134594813, 0.995781915781360),
        (-0.995781915781360, -0.288675134594813, -0.995781915781360),
        (0.995781915781360, 0.995781915781360, 0.288675134594813),
        (-0.995781915781360, -0.995781915781360, -0.288675134594813),
    ])

def Disphenocingulum():
    return np.array([
        (0.500000000000000, 0.767131113983461, 0.462947603915365),
        (0.500000000000000, -0.767131113983461, 0.462947603915365),
        (-0.500000000000000, 0.767131113983461, 0.462947603915365),
        (-0.500000000000000, -0.767131113983461, 0.462947603915365),
        (0.767131113983461, 0.500000000000000, -0.462947603915365),
        (0.767131113983461, -0.500000000000000, -0.462947603915365),
        (-0.767131113983461, 0.500000000000000, -0.462947603915365),
        (-0.767131113983461, -0.500000000000000, -0.462947603915365),
        (0.500000000000000, 0.000000000000000, 1.104437942079934),
        (-0.500000000000000, 0.000000000000000, 1.104437942079934),
        (0.000000000000000, 0.500000000000000, -1.104437942079934),
        (0.000000000000000, -0.500000000000000, -1.104437942079934),
        (1.126483147078980, 0.000000000000000, 0.325002975949970),
        (-1.126483147078980, 0.000000000000000, 0.325002975949970),
        (0.000000000000000, 1.126483147078980, -0.325002975949970),
        (0.000000000000000, -1.126483147078980, -0.325002975949970),
    ])

def PentagonalPyramid():
    return np.array([
        (0.809016994374947, 0.262865556059567, 0.000000000000000),
        (-0.809016994374947, 0.262865556059567, 0.000000000000000),
        (0.500000000000000, -0.688190960235587, 0.000000000000000),
        (-0.500000000000000, -0.688190960235587, 0.000000000000000),
        (0.000000000000000, 0.850650808352040, 0.000000000000000),
        (0.000000000000000, 0.000000000000000, 0.525731112119134),
    ])

def TriangularCupola():
    return np.array([
        (0.707106781186548, 0.000000000000000, 0.707106781186548),
        (0.707106781186548, 0.000000000000000, -0.707106781186548),
        (-0.707106781186548, 0.000000000000000, 0.707106781186548),
        (0.707106781186548, 0.707106781186548, 0.000000000000000),
        (0.707106781186548, -0.707106781186548, 0.000000000000000),
        (-0.707106781186548, 0.707106781186548, 0.000000000000000),
        (0.000000000000000, 0.707106781186548, 0.707106781186548),
        (0.000000000000000, 0.707106781186548, -0.707106781186548),
        (0.000000000000000, -0.707106781186548, 0.707106781186548),
    ])

def PentagonalGyrobicupola():
    return np.array([
        (0.000000000000000, 0.000000000000000, 1.618033988749895),
        (0.000000000000000, 0.000000000000000, -1.618033988749895),
        (0.809016994374947, -0.500000000000000, 1.309016994374947),
        (0.809016994374947, -0.500000000000000, -1.309016994374947),
        (-0.809016994374947, 0.500000000000000, 1.309016994374947),
        (-0.809016994374947, 0.500000000000000, -1.309016994374947),
        (1.309016994374947, -0.809016994374947, 0.500000000000000),
        (1.309016994374947, -0.809016994374947, -0.500000000000000),
        (-1.309016994374947, 0.809016994374947, 0.500000000000000),
        (-1.309016994374947, 0.809016994374947, -0.500000000000000),
        (1.000000000000000, 0.000000000000000, 0.000000000000000),
        (-1.000000000000000, 0.000000000000000, 0.000000000000000),
        (0.500000000000000, 0.309016994374947, 0.809016994374947),
        (0.500000000000000, 0.309016994374947, -0.809016994374947),
        (-0.500000000000000, -0.309016994374947, 0.809016994374947),
        (-0.500000000000000, -0.309016994374947, -0.809016994374947),
        (0.309016994374947, -0.809016994374947, 0.500000000000000),
        (0.309016994374947, -0.809016994374947, -0.500000000000000),
        (-0.309016994374947, 0.809016994374947, 0.500000000000000),
        (-0.309016994374947, 0.809016994374947, -0.500000000000000),
    ])

def ElongatedSquareDipyramid():
    return np.array([
        (0.500000000000000, 0.500000000000000, 0.500000000000000),
        (0.500000000000000, 0.500000000000000, -0.500000000000000),
        (0.500000000000000, -0.500000000000000, 0.500000000000000),
        (0.500000000000000, -0.500000000000000, -0.500000000000000),
        (-0.500000000000000, 0.500000000000000, 0.500000000000000),
        (-0.500000000000000, 0.500000000000000, -0.500000000000000),
        (-0.500000000000000, -0.500000000000000, 0.500000000000000),
        (-0.500000000000000, -0.500000000000000, -0.500000000000000),
        (0.000000000000000, 0.000000000000000, 1.207106781186547),
        (0.000000000000000, 0.000000000000000, -1.207106781186547),
    ])

def ElongatedPentagonalPyramid():
    return np.array([
        (0.809016994374947, 0.262865556059567, 0.500000000000000),
        (0.809016994374947, 0.262865556059567, -0.500000000000000),
        (-0.809016994374947, 0.262865556059567, 0.500000000000000),
        (-0.809016994374947, 0.262865556059567, -0.500000000000000),
        (0.500000000000000, -0.688190960235587, 0.500000000000000),
        (0.500000000000000, -0.688190960235587, -0.500000000000000),
        (-0.500000000000000, -0.688190960235587, 0.500000000000000),
        (-0.500000000000000, -0.688190960235587, -0.500000000000000),
        (0.000000000000000, 0.850650808352040, 0.500000000000000),
        (0.000000000000000, 0.850650808352040, -0.500000000000000),
        (0.000000000000000, 0.000000000000000, 1.025731112119134),
    ])

def GyroelongatedPentagonalRotunda():
    return np.array([
        (1.618033988749895, 0.000000000000000, 0.431198501929729),
        (-1.618033988749895, 0.000000000000000, 0.431198501929729),
        (1.309016994374947, 0.951056516295154, 0.431198501929729),
        (1.309016994374947, -0.951056516295154, 0.431198501929729),
        (-1.309016994374947, 0.951056516295154, 0.431198501929729),
        (-1.309016994374947, -0.951056516295154, 0.431198501929729),
        (0.500000000000000, 1.538841768587627, 0.431198501929729),
        (0.500000000000000, -1.538841768587627, 0.431198501929729),
        (-0.500000000000000, 1.538841768587627, 0.431198501929729),
        (-0.500000000000000, -1.538841768587627, 0.431198501929729),
        (1.538841768587627, 0.500000000000000, -0.431198501929729),
        (1.538841768587627, -0.500000000000000, -0.431198501929729),
        (-1.538841768587627, 0.500000000000000, -0.431198501929729),
        (-1.538841768587627, -0.500000000000000, -0.431198501929729),
        (0.951056516295154, 1.309016994374947, -0.431198501929729),
        (0.951056516295154, -1.309016994374947, -0.431198501929729),
        (-0.951056516295154, 1.309016994374947, -0.431198501929729),
        (-0.951056516295154, -1.309016994374947, -0.431198501929729),
        (0.000000000000000, 1.618033988749895, -0.431198501929729),
        (0.000000000000000, -1.618033988749895, -0.431198501929729),
        (1.309016994374947, -0.425325404176020, 1.281849310281769),
        (-1.309016994374947, -0.425325404176020, 1.281849310281769),
        (0.809016994374947, 1.113516364411607, 1.281849310281769),
        (-0.809016994374947, 1.113516364411607, 1.281849310281769),
        (0.000000000000000, -1.376381920471174, 1.281849310281769),
        (0.809016994374947, 0.262865556059567, 1.807580422400903),
        (-0.809016994374947, 0.262865556059567, 1.807580422400903),
        (0.500000000000000, -0.688190960235587, 1.807580422400903),
        (-0.500000000000000, -0.688190960235587, 1.807580422400903),
        (0.000000000000000, 0.850650808352040, 1.807580422400903),
    ])

def TrigyrateRhombicosidodecahedron():
    return np.array([
        (0.500000000000000, 0.500000000000000, 2.118033988749895),
        (0.500000000000000, 0.500000000000000, -2.118033988749895),
        (0.500000000000000, -0.500000000000000, 2.118033988749895),
        (0.500000000000000, -0.500000000000000, -2.118033988749895),
        (-0.500000000000000, 0.500000000000000, 2.118033988749895),
        (-0.500000000000000, 0.500000000000000, -2.118033988749895),
        (-0.500000000000000, -0.500000000000000, 2.118033988749895),
        (-0.500000000000000, -0.500000000000000, -2.118033988749895),
        (1.394427190999916, 1.670820393249937, 0.500000000000000),
        (1.394427190999916, 1.670820393249937, -0.500000000000000),
        (2.118033988749895, -0.500000000000000, 0.500000000000000),
        (2.118033988749895, -0.500000000000000, -0.500000000000000),
        (-1.394427190999916, 1.670820393249937, 0.500000000000000),
        (-1.394427190999916, 1.670820393249937, -0.500000000000000),
        (-2.118033988749895, -0.500000000000000, 0.500000000000000),
        (-2.118033988749895, -0.500000000000000, -0.500000000000000),
        (0.500000000000000, 2.118033988749895, 0.500000000000000),
        (0.500000000000000, 2.118033988749895, -0.500000000000000),
        (0.500000000000000, -1.394427190999916, 1.670820393249937),
        (0.500000000000000, -2.118033988749895, -0.500000000000000),
        (-0.500000000000000, 2.118033988749895, 0.500000000000000),
        (-0.500000000000000, 2.118033988749895, -0.500000000000000),
        (-0.500000000000000, -1.394427190999916, 1.670820393249937),
        (-0.500000000000000, -2.118033988749895, -0.500000000000000),
        (0.000000000000000, 1.309016994374947, 1.809016994374947),
        (0.000000000000000, 1.309016994374947, -1.809016994374947),
        (0.000000000000000, -2.203444185374863, 0.361803398874989),
        (0.000000000000000, -1.309016994374947, -1.809016994374947),
        (1.809016994374947, 0.000000000000000, 1.309016994374947),
        (1.809016994374947, 0.000000000000000, -1.309016994374947),
        (-1.809016994374947, 0.000000000000000, 1.309016994374947),
        (-1.809016994374947, 0.000000000000000, -1.309016994374947),
        (2.203444185374863, 0.361803398874989, 0.000000000000000),
        (1.309016994374947, -1.809016994374947, 0.000000000000000),
        (-2.203444185374863, 0.361803398874989, 0.000000000000000),
        (-1.309016994374947, -1.809016994374947, 0.000000000000000),
        (1.309016994374947, 0.809016994374947, 1.618033988749895),
        (1.309016994374947, 0.809016994374947, -1.618033988749895),
        (1.309016994374947, -0.809016994374947, 1.618033988749895),
        (1.309016994374947, -0.809016994374947, -1.618033988749895),
        (-1.309016994374947, 0.809016994374947, 1.618033988749895),
        (-1.309016994374947, 0.809016994374947, -1.618033988749895),
        (-1.309016994374947, -0.809016994374947, 1.618033988749895),
        (-1.309016994374947, -0.809016994374947, -1.618033988749895),
        (1.894427190999916, 0.861803398874989, 0.809016994374947),
        (1.894427190999916, 0.861803398874989, -0.809016994374947),
        (1.618033988749895, -1.309016994374947, 0.809016994374947),
        (1.618033988749895, -1.309016994374947, -0.809016994374947),
        (-1.894427190999916, 0.861803398874989, 0.809016994374947),
        (-1.894427190999916, 0.861803398874989, -0.809016994374947),
        (-1.618033988749895, -1.309016994374947, 0.809016994374947),
        (-1.618033988749895, -1.309016994374947, -0.809016994374947),
        (0.809016994374947, 1.618033988749895, 1.309016994374947),
        (0.809016994374947, 1.618033988749895, -1.309016994374947),
        (0.809016994374947, -1.894427190999916, 0.861803398874989),
        (0.809016994374947, -1.618033988749895, -1.309016994374947),
        (-0.809016994374947, 1.618033988749895, 1.309016994374947),
        (-0.809016994374947, 1.618033988749895, -1.309016994374947),
        (-0.809016994374947, -1.894427190999916, 0.861803398874989),
        (-0.809016994374947, -1.618033988749895, -1.309016994374947),
    ])

def Sphenomegacorona():
    return np.array([
        (0.500000000000000, 0.594633335632639, 0.000000000000000),
        (0.500000000000000, -0.594633335632639, 0.000000000000000),
        (-0.500000000000000, 0.594633335632639, 0.000000000000000),
        (-0.500000000000000, -0.594633335632639, 0.000000000000000),
        (1.283102338831269, 0.000000000000000, -0.182104154459469),
        (-1.283102338831269, 0.000000000000000, -0.182104154459469),
        (0.854743082488965, 0.000000000000000, 0.721504360056562),
        (-0.854743082488965, 0.000000000000000, 0.721504360056562),
        (0.500000000000000, 0.000000000000000, -0.803997012528282),
        (-0.500000000000000, 0.000000000000000, -0.803997012528282),
        (0.000000000000000, 0.500000000000000, 0.860839434381953),
        (0.000000000000000, -0.500000000000000, 0.860839434381953),
    ])

def SquareCupola():
    return np.array([
        (1.207106781186547, 0.500000000000000, 0.000000000000000),
        (1.207106781186547, -0.500000000000000, 0.000000000000000),
        (-1.207106781186547, 0.500000000000000, 0.000000000000000),
        (-1.207106781186547, -0.500000000000000, 0.000000000000000),
        (0.500000000000000, 1.207106781186547, 0.000000000000000),
        (0.500000000000000, -1.207106781186547, 0.000000000000000),
        (-0.500000000000000, 1.207106781186547, 0.000000000000000),
        (-0.500000000000000, -1.207106781186547, 0.000000000000000),
        (0.500000000000000, 0.500000000000000, 0.707106781186548),
        (0.500000000000000, -0.500000000000000, 0.707106781186548),
        (-0.500000000000000, 0.500000000000000, 0.707106781186548),
        (-0.500000000000000, -0.500000000000000, 0.707106781186548),
    ])

def BiaugmentedPentagonalPrism():
    return np.array([
        (0.809016994374947, 0.500000000000000, 0.262865556059567),
        (0.809016994374947, -0.500000000000000, 0.262865556059567),
        (-0.809016994374947, 0.500000000000000, 0.262865556059567),
        (-0.809016994374947, -0.500000000000000, 0.262865556059567),
        (0.500000000000000, 0.500000000000000, -0.688190960235587),
        (0.500000000000000, -0.500000000000000, -0.688190960235587),
        (-0.500000000000000, 0.500000000000000, -0.688190960235587),
        (-0.500000000000000, -0.500000000000000, -0.688190960235587),
        (0.000000000000000, 0.500000000000000, 0.850650808352040),
        (0.000000000000000, -0.500000000000000, 0.850650808352040),
        (1.327007009151431, 0.000000000000000, -0.431170714312421),
        (-1.327007009151431, 0.000000000000000, -0.431170714312421),
    ])

def AugmentedTridiminishedIcosahedron():
    return np.array([
        (0.809016994374947, 0.500000000000000, 0.000000000000000),
        (0.000000000000000, 0.809016994374947, 0.500000000000000),
        (0.500000000000000, 0.000000000000000, 0.809016994374947),
        (-0.809016994374947, 0.500000000000000, 0.000000000000000),
        (0.000000000000000, -0.809016994374947, 0.500000000000000),
        (0.500000000000000, 0.000000000000000, -0.809016994374947),
        (-0.809016994374947, -0.500000000000000, 0.000000000000000),
        (0.000000000000000, -0.809016994374947, -0.500000000000000),
        (-0.500000000000000, 0.000000000000000, -0.809016994374947),
        (0.907743518916014, 0.907743518916014, 0.907743518916014),
    ])

def PentagonalOrthobicupola():
    return np.array([
        (-1.618033988749895, 0.000000000000000, 0.000000000000000),
        (1.618033988749895, 0.000000000000000, 0.000000000000000),
        (-0.500000000000000, 1.538841768587627, 0.000000000000000),
        (0.500000000000000, 1.538841768587627, 0.000000000000000),
        (-0.500000000000000, -1.538841768587627, 0.000000000000000),
        (0.500000000000000, -1.538841768587627, 0.000000000000000),
        (-1.309016994374947, 0.951056516295154, 0.000000000000000),
        (1.309016994374947, 0.951056516295154, 0.000000000000000),
        (-1.309016994374947, -0.951056516295154, 0.000000000000000),
        (1.309016994374947, -0.951056516295154, 0.000000000000000),
        (0.000000000000000, 0.850650808352040, 0.525731112119134),
        (0.000000000000000, 0.850650808352040, -0.525731112119134),
        (-0.809016994374947, 0.262865556059567, 0.525731112119134),
        (-0.809016994374947, 0.262865556059567, -0.525731112119134),
        (0.809016994374947, 0.262865556059567, 0.525731112119134),
        (0.809016994374947, 0.262865556059567, -0.525731112119134),
        (-0.500000000000000, -0.688190960235587, 0.525731112119134),
        (-0.500000000000000, -0.688190960235587, -0.525731112119134),
        (0.500000000000000, -0.688190960235587, 0.525731112119134),
        (0.500000000000000, -0.688190960235587, -0.525731112119134),
    ])

def GyrateRhombicosidodecahedron():
    return np.array([
        (0.500000000000000, 0.500000000000000, 2.118033988749895),
        (0.500000000000000, 0.500000000000000, -2.118033988749895),
        (0.500000000000000, -0.500000000000000, 2.118033988749895),
        (0.500000000000000, -0.500000000000000, -2.118033988749895),
        (-0.500000000000000, 0.500000000000000, 2.118033988749895),
        (-0.500000000000000, 0.500000000000000, -2.118033988749895),
        (-0.500000000000000, -0.500000000000000, 2.118033988749895),
        (-0.500000000000000, -0.500000000000000, -2.118033988749895),
        (2.118033988749895, 0.500000000000000, 0.500000000000000),
        (2.118033988749895, 0.500000000000000, -0.500000000000000),
        (2.118033988749895, -0.500000000000000, 0.500000000000000),
        (2.118033988749895, -0.500000000000000, -0.500000000000000),
        (-2.118033988749895, 0.500000000000000, 0.500000000000000),
        (-2.118033988749895, 0.500000000000000, -0.500000000000000),
        (-2.118033988749895, -0.500000000000000, 0.500000000000000),
        (-2.118033988749895, -0.500000000000000, -0.500000000000000),
        (0.500000000000000, 1.394427190999916, 1.670820393249937),
        (0.500000000000000, 2.118033988749895, -0.500000000000000),
        (0.500000000000000, -2.118033988749895, 0.500000000000000),
        (0.500000000000000, -2.118033988749895, -0.500000000000000),
        (-0.500000000000000, 1.394427190999916, 1.670820393249937),
        (-0.500000000000000, 2.118033988749895, -0.500000000000000),
        (-0.500000000000000, -2.118033988749895, 0.500000000000000),
        (-0.500000000000000, -2.118033988749895, -0.500000000000000),
        (0.000000000000000, 2.203444185374863, 0.361803398874989),
        (0.000000000000000, 1.309016994374947, -1.809016994374947),
        (0.000000000000000, -1.309016994374947, 1.809016994374947),
        (0.000000000000000, -1.309016994374947, -1.809016994374947),
        (1.809016994374947, 0.000000000000000, 1.309016994374947),
        (1.809016994374947, 0.000000000000000, -1.309016994374947),
        (-1.809016994374947, 0.000000000000000, 1.309016994374947),
        (-1.809016994374947, 0.000000000000000, -1.309016994374947),
        (1.309016994374947, 1.809016994374947, 0.000000000000000),
        (1.309016994374947, -1.809016994374947, 0.000000000000000),
        (-1.309016994374947, 1.809016994374947, 0.000000000000000),
        (-1.309016994374947, -1.809016994374947, 0.000000000000000),
        (1.309016994374947, 0.809016994374947, 1.618033988749895),
        (1.309016994374947, 0.809016994374947, -1.618033988749895),
        (1.309016994374947, -0.809016994374947, 1.618033988749895),
        (1.309016994374947, -0.809016994374947, -1.618033988749895),
        (-1.309016994374947, 0.809016994374947, 1.618033988749895),
        (-1.309016994374947, 0.809016994374947, -1.618033988749895),
        (-1.309016994374947, -0.809016994374947, 1.618033988749895),
        (-1.309016994374947, -0.809016994374947, -1.618033988749895),
        (1.618033988749895, 1.309016994374947, 0.809016994374947),
        (1.618033988749895, 1.309016994374947, -0.809016994374947),
        (1.618033988749895, -1.309016994374947, 0.809016994374947),
        (1.618033988749895, -1.309016994374947, -0.809016994374947),
        (-1.618033988749895, 1.309016994374947, 0.809016994374947),
        (-1.618033988749895, 1.309016994374947, -0.809016994374947),
        (-1.618033988749895, -1.309016994374947, 0.809016994374947),
        (-1.618033988749895, -1.309016994374947, -0.809016994374947),
        (0.809016994374947, 1.894427190999916, 0.861803398874989),
        (0.809016994374947, 1.618033988749895, -1.309016994374947),
        (0.809016994374947, -1.618033988749895, 1.309016994374947),
        (0.809016994374947, -1.618033988749895, -1.309016994374947),
        (-0.809016994374947, 1.894427190999916, 0.861803398874989),
        (-0.809016994374947, 1.618033988749895, -1.309016994374947),
        (-0.809016994374947, -1.618033988749895, 1.309016994374947),
        (-0.809016994374947, -1.618033988749895, -1.309016994374947),
    ])

def BiaugmentedTruncatedCube():
    return np.array([
        (1.207106781186547, 0.500000000000000, 1.207106781186547),
        (1.207106781186547, 0.500000000000000, -1.207106781186547),
        (1.207106781186547, -0.500000000000000, 1.207106781186547),
        (1.207106781186547, -0.500000000000000, -1.207106781186547),
        (-1.207106781186547, 0.500000000000000, 1.207106781186547),
        (-1.207106781186547, 0.500000000000000, -1.207106781186547),
        (-1.207106781186547, -0.500000000000000, 1.207106781186547),
        (-1.207106781186547, -0.500000000000000, -1.207106781186547),
        (1.207106781186547, 1.207106781186547, 0.500000000000000),
        (1.207106781186547, 1.207106781186547, -0.500000000000000),
        (1.207106781186547, -1.207106781186547, 0.500000000000000),
        (1.207106781186547, -1.207106781186547, -0.500000000000000),
        (-1.207106781186547, 1.207106781186547, 0.500000000000000),
        (-1.207106781186547, 1.207106781186547, -0.500000000000000),
        (-1.207106781186547, -1.207106781186547, 0.500000000000000),
        (-1.207106781186547, -1.207106781186547, -0.500000000000000),
        (0.500000000000000, 1.207106781186547, 1.207106781186547),
        (0.500000000000000, 1.207106781186547, -1.207106781186547),
        (0.500000000000000, -1.207106781186547, 1.207106781186547),
        (0.500000000000000, -1.207106781186547, -1.207106781186547),
        (-0.500000000000000, 1.207106781186547, 1.207106781186547),
        (-0.500000000000000, 1.207106781186547, -1.207106781186547),
        (-0.500000000000000, -1.207106781186547, 1.207106781186547),
        (-0.500000000000000, -1.207106781186547, -1.207106781186547),
        (0.707106781186548, 0.000000000000000, 1.914213562373095),
        (0.707106781186548, 0.000000000000000, -1.914213562373095),
        (-0.707106781186548, 0.000000000000000, 1.914213562373095),
        (-0.707106781186548, 0.000000000000000, -1.914213562373095),
        (0.000000000000000, 0.707106781186548, 1.914213562373095),
        (0.000000000000000, 0.707106781186548, -1.914213562373095),
        (0.000000000000000, -0.707106781186548, 1.914213562373095),
        (0.000000000000000, -0.707106781186548, -1.914213562373095),
    ])

def ElongatedPentagonalCupola():
    return np.array([
        (1.618033988749895, 0.000000000000000, 0.500000000000000),
        (1.618033988749895, 0.000000000000000, -0.500000000000000),
        (-1.618033988749895, 0.000000000000000, 0.500000000000000),
        (-1.618033988749895, 0.000000000000000, -0.500000000000000),
        (1.309016994374947, 0.951056516295154, 0.500000000000000),
        (1.309016994374947, 0.951056516295154, -0.500000000000000),
        (1.309016994374947, -0.951056516295154, 0.500000000000000),
        (1.309016994374947, -0.951056516295154, -0.500000000000000),
        (-1.309016994374947, 0.951056516295154, 0.500000000000000),
        (-1.309016994374947, 0.951056516295154, -0.500000000000000),
        (-1.309016994374947, -0.951056516295154, 0.500000000000000),
        (-1.309016994374947, -0.951056516295154, -0.500000000000000),
        (0.500000000000000, 1.538841768587627, 0.500000000000000),
        (0.500000000000000, 1.538841768587627, -0.500000000000000),
        (0.500000000000000, -1.538841768587627, 0.500000000000000),
        (0.500000000000000, -1.538841768587627, -0.500000000000000),
        (-0.500000000000000, 1.538841768587627, 0.500000000000000),
        (-0.500000000000000, 1.538841768587627, -0.500000000000000),
        (-0.500000000000000, -1.538841768587627, 0.500000000000000),
        (-0.500000000000000, -1.538841768587627, -0.500000000000000),
        (0.809016994374947, 0.262865556059567, 1.025731112119134),
        (-0.809016994374947, 0.262865556059567, 1.025731112119134),
        (0.500000000000000, -0.688190960235587, 1.025731112119134),
        (-0.500000000000000, -0.688190960235587, 1.025731112119134),
        (0.000000000000000, 0.850650808352040, 1.025731112119134),
    ])

def AugmentedTruncatedCube():
    return np.array([
        (1.207106781186547, 0.500000000000000, 1.207106781186547),
        (1.207106781186547, 0.500000000000000, -1.207106781186547),
        (1.207106781186547, -0.500000000000000, 1.207106781186547),
        (1.207106781186547, -0.500000000000000, -1.207106781186547),
        (-1.207106781186547, 0.500000000000000, 1.207106781186547),
        (-1.207106781186547, 0.500000000000000, -1.207106781186547),
        (-1.207106781186547, -0.500000000000000, 1.207106781186547),
        (-1.207106781186547, -0.500000000000000, -1.207106781186547),
        (1.207106781186547, 1.207106781186547, 0.500000000000000),
        (1.207106781186547, 1.207106781186547, -0.500000000000000),
        (1.207106781186547, -1.207106781186547, 0.500000000000000),
        (1.207106781186547, -1.207106781186547, -0.500000000000000),
        (-1.207106781186547, 1.207106781186547, 0.500000000000000),
        (-1.207106781186547, 1.207106781186547, -0.500000000000000),
        (-1.207106781186547, -1.207106781186547, 0.500000000000000),
        (-1.207106781186547, -1.207106781186547, -0.500000000000000),
        (0.500000000000000, 1.207106781186547, 1.207106781186547),
        (0.500000000000000, 1.207106781186547, -1.207106781186547),
        (0.500000000000000, -1.207106781186547, 1.207106781186547),
        (0.500000000000000, -1.207106781186547, -1.207106781186547),
        (-0.500000000000000, 1.207106781186547, 1.207106781186547),
        (-0.500000000000000, 1.207106781186547, -1.207106781186547),
        (-0.500000000000000, -1.207106781186547, 1.207106781186547),
        (-0.500000000000000, -1.207106781186547, -1.207106781186547),
        (0.707106781186548, 0.000000000000000, 1.914213562373095),
        (-0.707106781186548, 0.000000000000000, 1.914213562373095),
        (0.000000000000000, 0.707106781186548, 1.914213562373095),
        (0.000000000000000, -0.707106781186548, 1.914213562373095),
    ])

def AugmentedTruncatedTetrahedron():
    return np.array([
        (0.353553390593274, -0.353553390593274, 1.060660171779821),
        (0.353553390593274, 0.353553390593274, -1.060660171779821),
        (-0.353553390593274, 0.353553390593274, 1.060660171779821),
        (-0.353553390593274, -0.353553390593274, -1.060660171779821),
        (1.060660171779821, -0.353553390593274, 0.353553390593274),
        (1.060660171779821, 0.353553390593274, -0.353553390593274),
        (-1.060660171779821, 0.353553390593274, 0.353553390593274),
        (-1.060660171779821, -0.353553390593274, -0.353553390593274),
        (0.353553390593274, -1.060660171779821, 0.353553390593274),
        (0.353553390593274, 1.060660171779821, -0.353553390593274),
        (-0.353553390593274, 1.060660171779821, 0.353553390593274),
        (-0.353553390593274, -1.060660171779821, -0.353553390593274),
        (0.589255650988790, 0.589255650988790, 1.296362432175337),
        (1.296362432175337, 0.589255650988790, 0.589255650988790),
        (0.589255650988790, 1.296362432175337, 0.589255650988790),
    ])

def ElongatedPentagonalGyrobicupola():
    return np.array([
        (1.618033988749895, 0.000000000000000, 0.500000000000000),
        (1.618033988749895, 0.000000000000000, -0.500000000000000),
        (-1.618033988749895, 0.000000000000000, 0.500000000000000),
        (-1.618033988749895, 0.000000000000000, -0.500000000000000),
        (1.309016994374947, 0.951056516295154, 0.500000000000000),
        (1.309016994374947, 0.951056516295154, -0.500000000000000),
        (1.309016994374947, -0.951056516295154, 0.500000000000000),
        (1.309016994374947, -0.951056516295154, -0.500000000000000),
        (-1.309016994374947, 0.951056516295154, 0.500000000000000),
        (-1.309016994374947, 0.951056516295154, -0.500000000000000),
        (-1.309016994374947, -0.951056516295154, 0.500000000000000),
        (-1.309016994374947, -0.951056516295154, -0.500000000000000),
        (0.500000000000000, 1.538841768587627, 0.500000000000000),
        (0.500000000000000, 1.538841768587627, -0.500000000000000),
        (0.500000000000000, -1.538841768587627, 0.500000000000000),
        (0.500000000000000, -1.538841768587627, -0.500000000000000),
        (-0.500000000000000, 1.538841768587627, 0.500000000000000),
        (-0.500000000000000, 1.538841768587627, -0.500000000000000),
        (-0.500000000000000, -1.538841768587627, 0.500000000000000),
        (-0.500000000000000, -1.538841768587627, -0.500000000000000),
        (0.809016994374947, 0.262865556059567, 1.025731112119134),
        (0.809016994374947, -0.262865556059567, -1.025731112119134),
        (-0.809016994374947, 0.262865556059567, 1.025731112119134),
        (-0.809016994374947, -0.262865556059567, -1.025731112119134),
        (0.500000000000000, -0.688190960235587, 1.025731112119134),
        (0.500000000000000, 0.688190960235587, -1.025731112119134),
        (-0.500000000000000, -0.688190960235587, 1.025731112119134),
        (-0.500000000000000, 0.688190960235587, -1.025731112119134),
        (0.000000000000000, 0.850650808352040, 1.025731112119134),
        (0.000000000000000, -0.850650808352040, -1.025731112119134),
    ])

def ParabiaugmentedHexagonalPrism():
    return np.array([
        (0.866025403784439, 0.500000000000000, 0.500000000000000),
        (0.866025403784439, 0.500000000000000, -0.500000000000000),
        (0.866025403784439, -0.500000000000000, 0.500000000000000),
        (0.866025403784439, -0.500000000000000, -0.500000000000000),
        (-0.866025403784439, 0.500000000000000, 0.500000000000000),
        (-0.866025403784439, 0.500000000000000, -0.500000000000000),
        (-0.866025403784439, -0.500000000000000, 0.500000000000000),
        (-0.866025403784439, -0.500000000000000, -0.500000000000000),
        (0.000000000000000, 1.000000000000000, 0.500000000000000),
        (0.000000000000000, 1.000000000000000, -0.500000000000000),
        (0.000000000000000, -1.000000000000000, 0.500000000000000),
        (0.000000000000000, -1.000000000000000, -0.500000000000000),
        (1.573132184970986, 0.000000000000000, 0.000000000000000),
        (-1.573132184970986, 0.000000000000000, 0.000000000000000),
    ])

def SnubDisphenoid():
    return np.array([
        (0.500000000000000, 0.000000000000000, -0.783930924232564),
        (-0.500000000000000, 0.000000000000000, -0.783930924232564),
        (0.000000000000000, 0.500000000000000, 0.783930924232564),
        (0.000000000000000, -0.500000000000000, 0.783930924232564),
        (0.644584273224155, 0.000000000000000, 0.205561565853260),
        (-0.644584273224155, 0.000000000000000, 0.205561565853260),
        (0.000000000000000, 0.644584273224155, -0.205561565853260),
        (0.000000000000000, -0.644584273224155, -0.205561565853260),
    ])

def BigyrateDiminishedRhombicosidodecahedron():
    return np.array([
        (0.500000000000000, 0.500000000000000, 2.118033988749895),
        (0.500000000000000, 0.500000000000000, -2.118033988749895),
        (0.500000000000000, -0.500000000000000, 2.118033988749895),
        (0.500000000000000, -0.500000000000000, -2.118033988749895),
        (-0.500000000000000, 0.500000000000000, 2.118033988749895),
        (-0.500000000000000, 0.500000000000000, -2.118033988749895),
        (-0.500000000000000, -0.500000000000000, 2.118033988749895),
        (-0.500000000000000, -0.500000000000000, -2.118033988749895),
        (2.118033988749895, 0.500000000000000, 0.500000000000000),
        (2.118033988749895, 0.500000000000000, -0.500000000000000),
        (1.394427190999916, -1.670820393249937, 0.500000000000000),
        (1.394427190999916, -1.670820393249937, -0.500000000000000),
        (-2.118033988749895, 0.500000000000000, 0.500000000000000),
        (-2.118033988749895, 0.500000000000000, -0.500000000000000),
        (-1.394427190999916, -1.670820393249937, 0.500000000000000),
        (-1.394427190999916, -1.670820393249937, -0.500000000000000),
        (0.500000000000000, 2.118033988749895, -0.500000000000000),
        (0.500000000000000, -2.118033988749895, 0.500000000000000),
        (0.500000000000000, -2.118033988749895, -0.500000000000000),
        (-0.500000000000000, 2.118033988749895, -0.500000000000000),
        (-0.500000000000000, -2.118033988749895, 0.500000000000000),
        (-0.500000000000000, -2.118033988749895, -0.500000000000000),
        (0.000000000000000, 1.309016994374947, -1.809016994374947),
        (0.000000000000000, -1.309016994374947, 1.809016994374947),
        (0.000000000000000, -1.309016994374947, -1.809016994374947),
        (1.809016994374947, 0.000000000000000, 1.309016994374947),
        (1.809016994374947, 0.000000000000000, -1.309016994374947),
        (-1.809016994374947, 0.000000000000000, 1.309016994374947),
        (-1.809016994374947, 0.000000000000000, -1.309016994374947),
        (1.309016994374947, 1.809016994374947, 0.000000000000000),
        (2.203444185374863, -0.361803398874989, 0.000000000000000),
        (-1.309016994374947, 1.809016994374947, 0.000000000000000),
        (-2.203444185374863, -0.361803398874989, 0.000000000000000),
        (1.309016994374947, 0.809016994374947, 1.618033988749895),
        (1.309016994374947, 0.809016994374947, -1.618033988749895),
        (1.309016994374947, -0.809016994374947, 1.618033988749895),
        (1.309016994374947, -0.809016994374947, -1.618033988749895),
        (-1.309016994374947, 0.809016994374947, 1.618033988749895),
        (-1.309016994374947, 0.809016994374947, -1.618033988749895),
        (-1.309016994374947, -0.809016994374947, 1.618033988749895),
        (-1.309016994374947, -0.809016994374947, -1.618033988749895),
        (1.618033988749895, 1.309016994374947, 0.809016994374947),
        (1.618033988749895, 1.309016994374947, -0.809016994374947),
        (1.894427190999916, -0.861803398874989, 0.809016994374947),
        (1.894427190999916, -0.861803398874989, -0.809016994374947),
        (-1.618033988749895, 1.309016994374947, 0.809016994374947),
        (-1.618033988749895, 1.309016994374947, -0.809016994374947),
        (-1.894427190999916, -0.861803398874989, 0.809016994374947),
        (-1.894427190999916, -0.861803398874989, -0.809016994374947),
        (0.809016994374947, 1.618033988749895, -1.309016994374947),
        (0.809016994374947, -1.618033988749895, 1.309016994374947),
        (0.809016994374947, -1.618033988749895, -1.309016994374947),
        (-0.809016994374947, 1.618033988749895, -1.309016994374947),
        (-0.809016994374947, -1.618033988749895, 1.309016994374947),
        (-0.809016994374947, -1.618033988749895, -1.309016994374947),
    ])

def SquareGyrobicupola():
    return np.array([
        (1.207106781186547, 0.500000000000000, 0.000000000000000),
        (1.207106781186547, -0.500000000000000, 0.000000000000000),
        (-1.207106781186547, 0.500000000000000, 0.000000000000000),
        (-1.207106781186547, -0.500000000000000, 0.000000000000000),
        (0.500000000000000, 1.207106781186547, 0.000000000000000),
        (0.500000000000000, -1.207106781186547, 0.000000000000000),
        (-0.500000000000000, 1.207106781186547, 0.000000000000000),
        (-0.500000000000000, -1.207106781186547, 0.000000000000000),
        (0.707106781186548, 0.000000000000000, 0.707106781186548),
        (-0.707106781186548, 0.000000000000000, 0.707106781186548),
        (0.000000000000000, 0.707106781186548, 0.707106781186548),
        (0.000000000000000, -0.707106781186548, 0.707106781186548),
        (0.500000000000000, 0.500000000000000, -0.707106781186548),
        (0.500000000000000, -0.500000000000000, -0.707106781186548),
        (-0.500000000000000, 0.500000000000000, -0.707106781186548),
        (-0.500000000000000, -0.500000000000000, -0.707106781186548),
    ])

def AugmentedPentagonalPrism():
    return np.array([
        (0.809016994374947, 0.500000000000000, -0.262865556059567),
        (0.809016994374947, -0.500000000000000, -0.262865556059567),
        (-0.809016994374947, 0.500000000000000, -0.262865556059567),
        (-0.809016994374947, -0.500000000000000, -0.262865556059567),
        (0.500000000000000, 0.500000000000000, 0.688190960235587),
        (0.500000000000000, -0.500000000000000, 0.688190960235587),
        (-0.500000000000000, 0.500000000000000, 0.688190960235587),
        (-0.500000000000000, -0.500000000000000, 0.688190960235587),
        (0.000000000000000, 0.500000000000000, -0.850650808352040),
        (0.000000000000000, -0.500000000000000, -0.850650808352040),
        (0.000000000000000, 0.000000000000000, 1.395297741422134),
    ])

def GyroelongatedPentagonalCupola():
    return np.array([
        (1.618033988749895, 0.000000000000000, 0.431198501929729),
        (-1.618033988749895, 0.000000000000000, 0.431198501929729),
        (1.309016994374947, 0.951056516295154, 0.431198501929729),
        (1.309016994374947, -0.951056516295154, 0.431198501929729),
        (-1.309016994374947, 0.951056516295154, 0.431198501929729),
        (-1.309016994374947, -0.951056516295154, 0.431198501929729),
        (0.500000000000000, 1.538841768587627, 0.431198501929729),
        (0.500000000000000, -1.538841768587627, 0.431198501929729),
        (-0.500000000000000, 1.538841768587627, 0.431198501929729),
        (-0.500000000000000, -1.538841768587627, 0.431198501929729),
        (1.538841768587627, 0.500000000000000, -0.431198501929729),
        (1.538841768587627, -0.500000000000000, -0.431198501929729),
        (-1.538841768587627, 0.500000000000000, -0.431198501929729),
        (-1.538841768587627, -0.500000000000000, -0.431198501929729),
        (0.951056516295154, 1.309016994374947, -0.431198501929729),
        (0.951056516295154, -1.309016994374947, -0.431198501929729),
        (-0.951056516295154, 1.309016994374947, -0.431198501929729),
        (-0.951056516295154, -1.309016994374947, -0.431198501929729),
        (0.000000000000000, 1.618033988749895, -0.431198501929729),
        (0.000000000000000, -1.618033988749895, -0.431198501929729),
        (0.809016994374947, 0.262865556059567, 0.956929614048863),
        (-0.809016994374947, 0.262865556059567, 0.956929614048863),
        (0.500000000000000, -0.688190960235587, 0.956929614048863),
        (-0.500000000000000, -0.688190960235587, 0.956929614048863),
        (0.000000000000000, 0.850650808352040, 0.956929614048863),
    ])

def GyroelongatedPentagonalBicupola():
    return np.array([
        (1.618033988749895, 0.000000000000000, 0.431198501929729),
        (-1.618033988749895, 0.000000000000000, 0.431198501929729),
        (0.000000000000000, 1.618033988749895, -0.431198501929729),
        (0.000000000000000, -1.618033988749895, -0.431198501929729),
        (1.309016994374947, 0.951056516295154, 0.431198501929729),
        (1.309016994374947, -0.951056516295154, 0.431198501929729),
        (-1.309016994374947, 0.951056516295154, 0.431198501929729),
        (-1.309016994374947, -0.951056516295154, 0.431198501929729),
        (0.951056516295154, 1.309016994374947, -0.431198501929729),
        (0.951056516295154, -1.309016994374947, -0.431198501929729),
        (-0.951056516295154, 1.309016994374947, -0.431198501929729),
        (-0.951056516295154, -1.309016994374947, -0.431198501929729),
        (0.500000000000000, 1.538841768587627, 0.431198501929729),
        (0.500000000000000, -1.538841768587627, 0.431198501929729),
        (-0.500000000000000, 1.538841768587627, 0.431198501929729),
        (-0.500000000000000, -1.538841768587627, 0.431198501929729),
        (1.538841768587627, 0.500000000000000, -0.431198501929729),
        (1.538841768587627, -0.500000000000000, -0.431198501929729),
        (-1.538841768587627, 0.500000000000000, -0.431198501929729),
        (-1.538841768587627, -0.500000000000000, -0.431198501929729),
        (0.000000000000000, 0.850650808352040, 0.956929614048863),
        (0.850650808352040, 0.000000000000000, -0.956929614048863),
        (0.809016994374947, 0.262865556059567, 0.956929614048863),
        (-0.809016994374947, 0.262865556059567, 0.956929614048863),
        (0.262865556059567, 0.809016994374947, -0.956929614048863),
        (0.262865556059567, -0.809016994374947, -0.956929614048863),
        (0.500000000000000, -0.688190960235587, 0.956929614048863),
        (-0.500000000000000, -0.688190960235587, 0.956929614048863),
        (-0.688190960235587, 0.500000000000000, -0.956929614048863),
        (-0.688190960235587, -0.500000000000000, -0.956929614048863),
    ])

def TriaugmentedTriangularPrism():
    return np.array([
        (0.500000000000000, -0.288675134594813, 0.500000000000000),
        (0.500000000000000, -0.288675134594813, -0.500000000000000),
        (-0.500000000000000, -0.288675134594813, 0.500000000000000),
        (-0.500000000000000, -0.288675134594813, -0.500000000000000),
        (0.000000000000000, 0.577350269189626, 0.500000000000000),
        (0.000000000000000, 0.577350269189626, -0.500000000000000),
        (0.862372435695794, 0.497890957890680, 0.000000000000000),
        (-0.862372435695794, 0.497890957890680, 0.000000000000000),
        (0.000000000000000, -0.995781915781360, 0.000000000000000),
    ])

def MetabiaugmentedTruncatedDodecahedron():
    return np.array([
        (0.000000000000000, 0.500000000000000, 2.927050983124842),
        (0.000000000000000, 0.500000000000000, -2.927050983124842),
        (0.000000000000000, -0.500000000000000, 2.927050983124842),
        (0.000000000000000, -0.500000000000000, -2.927050983124842),
        (2.927050983124842, 0.000000000000000, 0.500000000000000),
        (2.927050983124842, 0.000000000000000, -0.500000000000000),
        (-2.927050983124842, 0.000000000000000, 0.500000000000000),
        (-2.927050983124842, 0.000000000000000, -0.500000000000000),
        (0.500000000000000, 2.927050983124842, 0.000000000000000),
        (0.500000000000000, -2.927050983124842, 0.000000000000000),
        (-0.500000000000000, 2.927050983124842, 0.000000000000000),
        (-0.500000000000000, -2.927050983124842, 0.000000000000000),
        (0.500000000000000, 1.309016994374947, 2.618033988749895),
        (0.500000000000000, 1.309016994374947, -2.618033988749895),
        (0.500000000000000, -1.309016994374947, 2.618033988749895),
        (0.500000000000000, -1.309016994374947, -2.618033988749895),
        (-0.500000000000000, 1.309016994374947, 2.618033988749895),
        (-0.500000000000000, 1.309016994374947, -2.618033988749895),
        (-0.500000000000000, -1.309016994374947, 2.618033988749895),
        (-0.500000000000000, -1.309016994374947, -2.618033988749895),
        (2.618033988749895, 0.500000000000000, 1.309016994374947),
        (2.618033988749895, 0.500000000000000, -1.309016994374947),
        (2.618033988749895, -0.500000000000000, 1.309016994374947),
        (2.618033988749895, -0.500000000000000, -1.309016994374947),
        (-2.618033988749895, 0.500000000000000, 1.309016994374947),
        (-2.618033988749895, 0.500000000000000, -1.309016994374947),
        (-2.618033988749895, -0.500000000000000, 1.309016994374947),
        (-2.618033988749895, -0.500000000000000, -1.309016994374947),
        (1.309016994374947, 2.618033988749895, 0.500000000000000),
        (1.309016994374947, 2.618033988749895, -0.500000000000000),
        (1.309016994374947, -2.618033988749895, 0.500000000000000),
        (1.309016994374947, -2.618033988749895, -0.500000000000000),
        (-1.309016994374947, 2.618033988749895, 0.500000000000000),
        (-1.309016994374947, 2.618033988749895, -0.500000000000000),
        (-1.309016994374947, -2.618033988749895, 0.500000000000000),
        (-1.309016994374947, -2.618033988749895, -0.500000000000000),
        (1.309016994374947, 1.618033988749895, 2.118033988749895),
        (1.309016994374947, 1.618033988749895, -2.118033988749895),
        (1.309016994374947, -1.618033988749895, 2.118033988749895),
        (1.309016994374947, -1.618033988749895, -2.118033988749895),
        (-1.309016994374947, 1.618033988749895, 2.118033988749895),
        (-1.309016994374947, 1.618033988749895, -2.118033988749895),
        (-1.309016994374947, -1.618033988749895, 2.118033988749895),
        (-1.309016994374947, -1.618033988749895, -2.118033988749895),
        (2.118033988749895, 1.309016994374947, 1.618033988749895),
        (2.118033988749895, 1.309016994374947, -1.618033988749895),
        (2.118033988749895, -1.309016994374947, 1.618033988749895),
        (2.118033988749895, -1.309016994374947, -1.618033988749895),
        (-2.118033988749895, 1.309016994374947, 1.618033988749895),
        (-2.118033988749895, 1.309016994374947, -1.618033988749895),
        (-2.118033988749895, -1.309016994374947, 1.618033988749895),
        (-2.118033988749895, -1.309016994374947, -1.618033988749895),
        (1.618033988749895, 2.118033988749895, 1.309016994374947),
        (1.618033988749895, 2.118033988749895, -1.309016994374947),
        (1.618033988749895, -2.118033988749895, 1.309016994374947),
        (1.618033988749895, -2.118033988749895, -1.309016994374947),
        (-1.618033988749895, 2.118033988749895, 1.309016994374947),
        (-1.618033988749895, 2.118033988749895, -1.309016994374947),
        (-1.618033988749895, -2.118033988749895, 1.309016994374947),
        (-1.618033988749895, -2.118033988749895, -1.309016994374947),
        (0.809016994374947, 2.703444185374863, 1.361803398874990),
        (0.809016994374947, -2.703444185374863, 1.361803398874990),
        (-0.809016994374947, 2.703444185374863, 1.361803398874990),
        (-0.809016994374947, -2.703444185374863, 1.361803398874990),
        (0.500000000000000, 2.203444185374863, 2.170820393249937),
        (0.500000000000000, -2.203444185374863, 2.170820393249937),
        (-0.500000000000000, 2.203444185374863, 2.170820393249937),
        (-0.500000000000000, -2.203444185374863, 2.170820393249937),
        (0.000000000000000, 3.012461179749811, 0.861803398874989),
        (0.000000000000000, -3.012461179749811, 0.861803398874989),
    ])

def ElongatedTriangularOrthobicupola():
    return np.array([
        (0.995781915781360, -0.418431646591735, 0.288675134594813),
        (-0.995781915781360, 0.418431646591735, -0.288675134594813),
        (-0.288675134594813, -0.995781915781360, 0.418431646591735),
        (0.288675134594813, 0.995781915781360, -0.418431646591735),
        (-0.418431646591735, 0.288675134594813, 0.995781915781360),
        (0.418431646591735, -0.288675134594813, -0.995781915781360),
        (-0.995781915781360, -0.288675134594813, 0.418431646591735),
        (0.995781915781360, 0.288675134594813, -0.418431646591735),
        (-0.418431646591735, 0.995781915781360, 0.288675134594813),
        (0.418431646591735, -0.995781915781360, -0.288675134594813),
        (0.288675134594813, -0.418431646591735, 0.995781915781360),
        (-0.288675134594813, 0.418431646591735, -0.995781915781360),
        (0.288675134594813, 0.995781915781360, 0.995781915781360),
        (0.995781915781360, 0.288675134594813, 0.995781915781360),
        (0.995781915781360, 0.995781915781360, 0.288675134594813),
        (-1.231484176176876, -0.524377394990329, -0.524377394990329),
        (-0.524377394990329, -1.231484176176876, -0.524377394990329),
        (-0.524377394990329, -0.524377394990329, -1.231484176176876),
    ])

def ElongatedTriangularPyramid():
    return np.array([
        (0.500000000000000, -0.288675134594813, 0.500000000000000),
        (0.500000000000000, -0.288675134594813, -0.500000000000000),
        (-0.500000000000000, -0.288675134594813, 0.500000000000000),
        (-0.500000000000000, -0.288675134594813, -0.500000000000000),
        (0.000000000000000, 0.577350269189626, 0.500000000000000),
        (0.000000000000000, 0.577350269189626, -0.500000000000000),
        (0.000000000000000, 0.000000000000000, 1.316496580927726),
    ])

def Hebesphenomegacorona():
    return np.array([
        (0.500000000000000, 0.716844815713457, 0.000000000000000),
        (0.500000000000000, -0.716844815713457, 0.000000000000000),
        (-0.500000000000000, 0.716844815713457, 0.000000000000000),
        (-0.500000000000000, -0.716844815713457, 0.000000000000000),
        (0.500000000000000, 0.500000000000000, -0.976206087820700),
        (0.500000000000000, -0.500000000000000, -0.976206087820700),
        (-0.500000000000000, 0.500000000000000, -0.976206087820700),
        (-0.500000000000000, -0.500000000000000, -0.976206087820700),
        (1.101296042047278, 0.000000000000000, -0.352954076337161),
        (-1.101296042047278, 0.000000000000000, -0.352954076337161),
        (0.835659071722367, 0.000000000000000, 0.611119053667302),
        (-0.835659071722367, 0.000000000000000, 0.611119053667302),
        (0.000000000000000, 0.500000000000000, 0.838438027464283),
        (0.000000000000000, -0.500000000000000, 0.838438027464283),
    ])

def GyroelongatedSquareBicupola():
    return np.array([
        (1.207106781186547, 0.500000000000000, 0.430147784931486),
        (1.207106781186547, -0.500000000000000, 0.430147784931486),
        (-1.207106781186547, 0.500000000000000, 0.430147784931486),
        (-1.207106781186547, -0.500000000000000, 0.430147784931486),
        (0.500000000000000, 1.207106781186547, 0.430147784931486),
        (0.500000000000000, -1.207106781186547, 0.430147784931486),
        (-0.500000000000000, 1.207106781186547, 0.430147784931486),
        (-0.500000000000000, -1.207106781186547, 0.430147784931486),
        (1.306562964876377, 0.000000000000000, -0.430147784931486),
        (-1.306562964876377, 0.000000000000000, -0.430147784931486),
        (0.000000000000000, 1.306562964876377, -0.430147784931486),
        (0.000000000000000, -1.306562964876377, -0.430147784931486),
        (0.923879532511287, 0.923879532511287, -0.430147784931486),
        (0.923879532511287, -0.923879532511287, -0.430147784931486),
        (-0.923879532511287, 0.923879532511287, -0.430147784931486),
        (-0.923879532511287, -0.923879532511287, -0.430147784931486),
        (0.500000000000000, 0.500000000000000, 1.137254566118033),
        (0.500000000000000, -0.500000000000000, 1.137254566118033),
        (-0.500000000000000, 0.500000000000000, 1.137254566118033),
        (-0.500000000000000, -0.500000000000000, 1.137254566118033),
        (0.653281482438188, -0.270598050073099, -1.137254566118033),
        (-0.653281482438188, 0.270598050073099, -1.137254566118033),
        (0.270598050073099, 0.653281482438188, -1.137254566118033),
        (-0.270598050073099, -0.653281482438188, -1.137254566118033),
    ])

def AugmentedTruncatedDodecahedron():
    return np.array([
        (0.000000000000000, 0.500000000000000, 2.927050983124842),
        (0.000000000000000, 0.500000000000000, -2.927050983124842),
        (0.000000000000000, -0.500000000000000, 2.927050983124842),
        (0.000000000000000, -0.500000000000000, -2.927050983124842),
        (2.927050983124842, 0.000000000000000, 0.500000000000000),
        (2.927050983124842, 0.000000000000000, -0.500000000000000),
        (-2.927050983124842, 0.000000000000000, 0.500000000000000),
        (-2.927050983124842, 0.000000000000000, -0.500000000000000),
        (0.500000000000000, 2.927050983124842, 0.000000000000000),
        (0.500000000000000, -2.927050983124842, 0.000000000000000),
        (-0.500000000000000, 2.927050983124842, 0.000000000000000),
        (-0.500000000000000, -2.927050983124842, 0.000000000000000),
        (0.500000000000000, 1.309016994374947, 2.618033988749895),
        (0.500000000000000, 1.309016994374947, -2.618033988749895),
        (0.500000000000000, -1.309016994374947, 2.618033988749895),
        (0.500000000000000, -1.309016994374947, -2.618033988749895),
        (-0.500000000000000, 1.309016994374947, 2.618033988749895),
        (-0.500000000000000, 1.309016994374947, -2.618033988749895),
        (-0.500000000000000, -1.309016994374947, 2.618033988749895),
        (-0.500000000000000, -1.309016994374947, -2.618033988749895),
        (2.618033988749895, 0.500000000000000, 1.309016994374947),
        (2.618033988749895, 0.500000000000000, -1.309016994374947),
        (2.618033988749895, -0.500000000000000, 1.309016994374947),
        (2.618033988749895, -0.500000000000000, -1.309016994374947),
        (-2.618033988749895, 0.500000000000000, 1.309016994374947),
        (-2.618033988749895, 0.500000000000000, -1.309016994374947),
        (-2.618033988749895, -0.500000000000000, 1.309016994374947),
        (-2.618033988749895, -0.500000000000000, -1.309016994374947),
        (1.309016994374947, 2.618033988749895, 0.500000000000000),
        (1.309016994374947, 2.618033988749895, -0.500000000000000),
        (1.309016994374947, -2.618033988749895, 0.500000000000000),
        (1.309016994374947, -2.618033988749895, -0.500000000000000),
        (-1.309016994374947, 2.618033988749895, 0.500000000000000),
        (-1.309016994374947, 2.618033988749895, -0.500000000000000),
        (-1.309016994374947, -2.618033988749895, 0.500000000000000),
        (-1.309016994374947, -2.618033988749895, -0.500000000000000),
        (1.309016994374947, 1.618033988749895, 2.118033988749895),
        (1.309016994374947, 1.618033988749895, -2.118033988749895),
        (1.309016994374947, -1.618033988749895, 2.118033988749895),
        (1.309016994374947, -1.618033988749895, -2.118033988749895),
        (-1.309016994374947, 1.618033988749895, 2.118033988749895),
        (-1.309016994374947, 1.618033988749895, -2.118033988749895),
        (-1.309016994374947, -1.618033988749895, 2.118033988749895),
        (-1.309016994374947, -1.618033988749895, -2.118033988749895),
        (2.118033988749895, 1.309016994374947, 1.618033988749895),
        (2.118033988749895, 1.309016994374947, -1.618033988749895),
        (2.118033988749895, -1.309016994374947, 1.618033988749895),
        (2.118033988749895, -1.309016994374947, -1.618033988749895),
        (-2.118033988749895, 1.309016994374947, 1.618033988749895),
        (-2.118033988749895, 1.309016994374947, -1.618033988749895),
        (-2.118033988749895, -1.309016994374947, 1.618033988749895),
        (-2.118033988749895, -1.309016994374947, -1.618033988749895),
        (1.618033988749895, 2.118033988749895, 1.309016994374947),
        (1.618033988749895, 2.118033988749895, -1.309016994374947),
        (1.618033988749895, -2.118033988749895, 1.309016994374947),
        (1.618033988749895, -2.118033988749895, -1.309016994374947),
        (-1.618033988749895, 2.118033988749895, 1.309016994374947),
        (-1.618033988749895, 2.118033988749895, -1.309016994374947),
        (-1.618033988749895, -2.118033988749895, 1.309016994374947),
        (-1.618033988749895, -2.118033988749895, -1.309016994374947),
        (0.809016994374947, 2.703444185374863, 1.361803398874990),
        (-0.809016994374947, 2.703444185374863, 1.361803398874990),
        (0.500000000000000, 2.203444185374863, 2.170820393249937),
        (-0.500000000000000, 2.203444185374863, 2.170820393249937),
        (0.000000000000000, 3.012461179749811, 0.861803398874989),
    ])

def GyroelongatedPentagonalBirotunda():
    return np.array([
        (0.000000000000000, 0.850650808352040, 1.807580422400903),
        (-0.850650808352040, 0.000000000000000, -1.807580422400903),
        (0.809016994374947, 0.262865556059567, 1.807580422400903),
        (-0.809016994374947, 0.262865556059567, 1.807580422400903),
        (-0.262865556059567, 0.809016994374947, -1.807580422400903),
        (-0.262865556059567, -0.809016994374947, -1.807580422400903),
        (0.500000000000000, -0.688190960235587, 1.807580422400903),
        (-0.500000000000000, -0.688190960235587, 1.807580422400903),
        (0.688190960235587, 0.500000000000000, -1.807580422400903),
        (0.688190960235587, -0.500000000000000, -1.807580422400903),
        (0.000000000000000, -1.376381920471174, 1.281849310281769),
        (1.376381920471174, 0.000000000000000, -1.281849310281769),
        (1.309016994374947, -0.425325404176020, 1.281849310281769),
        (-1.309016994374947, -0.425325404176020, 1.281849310281769),
        (0.425325404176020, 1.309016994374947, -1.281849310281769),
        (0.425325404176020, -1.309016994374947, -1.281849310281769),
        (0.809016994374947, 1.113516364411607, 1.281849310281769),
        (-0.809016994374947, 1.113516364411607, 1.281849310281769),
        (-1.113516364411607, 0.809016994374947, -1.281849310281769),
        (-1.113516364411607, -0.809016994374947, -1.281849310281769),
        (1.618033988749895, 0.000000000000000, 0.431198501929729),
        (-1.618033988749895, 0.000000000000000, 0.431198501929729),
        (0.000000000000000, 1.618033988749895, -0.431198501929729),
        (0.000000000000000, -1.618033988749895, -0.431198501929729),
        (0.500000000000000, 1.538841768587627, 0.431198501929729),
        (0.500000000000000, -1.538841768587627, 0.431198501929729),
        (-0.500000000000000, 1.538841768587627, 0.431198501929729),
        (-0.500000000000000, -1.538841768587627, 0.431198501929729),
        (1.538841768587627, 0.500000000000000, -0.431198501929729),
        (1.538841768587627, -0.500000000000000, -0.431198501929729),
        (-1.538841768587627, 0.500000000000000, -0.431198501929729),
        (-1.538841768587627, -0.500000000000000, -0.431198501929729),
        (1.309016994374947, 0.951056516295154, 0.431198501929729),
        (1.309016994374947, -0.951056516295154, 0.431198501929729),
        (-1.309016994374947, 0.951056516295154, 0.431198501929729),
        (-1.309016994374947, -0.951056516295154, 0.431198501929729),
        (0.951056516295154, 1.309016994374947, -0.431198501929729),
        (0.951056516295154, -1.309016994374947, -0.431198501929729),
        (-0.951056516295154, 1.309016994374947, -0.431198501929729),
        (-0.951056516295154, -1.309016994374947, -0.431198501929729),
    ])

def PentagonalCupola():
    return np.array([
        (1.618033988749895, 0.000000000000000, 0.000000000000000),
        (-1.618033988749895, 0.000000000000000, 0.000000000000000),
        (1.309016994374947, -0.809016994374947, 0.500000000000000),
        (1.309016994374947, 0.809016994374947, -0.500000000000000),
        (-1.309016994374947, -0.809016994374947, 0.500000000000000),
        (-1.309016994374947, 0.809016994374947, -0.500000000000000),
        (0.500000000000000, -1.309016994374947, 0.809016994374947),
        (0.500000000000000, 1.309016994374947, -0.809016994374947),
        (-0.500000000000000, -1.309016994374947, 0.809016994374947),
        (-0.500000000000000, 1.309016994374947, -0.809016994374947),
        (0.809016994374947, 0.500000000000000, 0.309016994374947),
        (-0.809016994374947, 0.500000000000000, 0.309016994374947),
        (0.500000000000000, -0.309016994374947, 0.809016994374947),
        (-0.500000000000000, -0.309016994374947, 0.809016994374947),
        (0.000000000000000, 1.000000000000000, 0.000000000000000),
    ])

def GyroelongatedSquareDipyramid():
    return np.array([
        (0.707106781186548, 0.000000000000000, 0.420448207626857),
        (-0.707106781186548, 0.000000000000000, 0.420448207626857),
        (0.000000000000000, 0.707106781186548, 0.420448207626857),
        (0.000000000000000, -0.707106781186548, 0.420448207626857),
        (0.500000000000000, 0.500000000000000, -0.420448207626857),
        (0.500000000000000, -0.500000000000000, -0.420448207626857),
        (-0.500000000000000, 0.500000000000000, -0.420448207626857),
        (-0.500000000000000, -0.500000000000000, -0.420448207626857),
        (0.000000000000000, 0.000000000000000, 1.127554988813405),
        (0.000000000000000, 0.000000000000000, -1.127554988813405),
    ])

def ElongatedPentagonalGyrobirotunda():
    return np.array([
        (1.618033988749895, 0.000000000000000, 0.500000000000000),
        (1.618033988749895, 0.000000000000000, -0.500000000000000),
        (-1.618033988749895, 0.000000000000000, 0.500000000000000),
        (-1.618033988749895, 0.000000000000000, -0.500000000000000),
        (1.309016994374947, 0.951056516295154, 0.500000000000000),
        (1.309016994374947, 0.951056516295154, -0.500000000000000),
        (1.309016994374947, -0.951056516295154, 0.500000000000000),
        (1.309016994374947, -0.951056516295154, -0.500000000000000),
        (-1.309016994374947, 0.951056516295154, 0.500000000000000),
        (-1.309016994374947, 0.951056516295154, -0.500000000000000),
        (-1.309016994374947, -0.951056516295154, 0.500000000000000),
        (-1.309016994374947, -0.951056516295154, -0.500000000000000),
        (0.500000000000000, 1.538841768587627, 0.500000000000000),
        (0.500000000000000, 1.538841768587627, -0.500000000000000),
        (0.500000000000000, -1.538841768587627, 0.500000000000000),
        (0.500000000000000, -1.538841768587627, -0.500000000000000),
        (-0.500000000000000, 1.538841768587627, 0.500000000000000),
        (-0.500000000000000, 1.538841768587627, -0.500000000000000),
        (-0.500000000000000, -1.538841768587627, 0.500000000000000),
        (-0.500000000000000, -1.538841768587627, -0.500000000000000),
        (0.809016994374947, 0.262865556059567, 1.876381920471174),
        (0.809016994374947, -0.262865556059567, -1.876381920471174),
        (-0.809016994374947, 0.262865556059567, 1.876381920471174),
        (-0.809016994374947, -0.262865556059567, -1.876381920471174),
        (0.500000000000000, -0.688190960235587, 1.876381920471174),
        (0.500000000000000, 0.688190960235587, -1.876381920471174),
        (-0.500000000000000, -0.688190960235587, 1.876381920471174),
        (-0.500000000000000, 0.688190960235587, -1.876381920471174),
        (0.000000000000000, 0.850650808352040, 1.876381920471174),
        (0.000000000000000, -0.850650808352040, -1.876381920471174),
        (1.309016994374947, -0.425325404176020, 1.350650808352040),
        (1.309016994374947, 0.425325404176020, -1.350650808352040),
        (-1.309016994374947, -0.425325404176020, 1.350650808352040),
        (-1.309016994374947, 0.425325404176020, -1.350650808352040),
        (0.809016994374947, 1.113516364411607, 1.350650808352040),
        (0.809016994374947, -1.113516364411607, -1.350650808352040),
        (-0.809016994374947, 1.113516364411607, 1.350650808352040),
        (-0.809016994374947, -1.113516364411607, -1.350650808352040),
        (0.000000000000000, -1.376381920471174, 1.350650808352040),
        (0.000000000000000, 1.376381920471174, -1.350650808352040),
    ])

def Gyrobifastigium():
    return np.array([
        (0.500000000000000, 0.000000000000000, 0.866025403784439),
        (-0.500000000000000, 0.000000000000000, 0.866025403784439),
        (0.000000000000000, 0.500000000000000, -0.866025403784439),
        (0.000000000000000, -0.500000000000000, -0.866025403784439),
        (0.500000000000000, 0.500000000000000, 0.000000000000000),
        (0.500000000000000, -0.500000000000000, 0.000000000000000),
        (-0.500000000000000, 0.500000000000000, 0.000000000000000),
        (-0.500000000000000, -0.500000000000000, 0.000000000000000),
    ])

def MetabigyrateRhombicosidodecahedron():
    return np.array([
        (0.500000000000000, 0.500000000000000, 2.118033988749895),
        (0.500000000000000, 0.500000000000000, -2.118033988749895),
        (0.500000000000000, -0.500000000000000, 2.118033988749895),
        (0.500000000000000, -0.500000000000000, -2.118033988749895),
        (-0.500000000000000, 0.500000000000000, 2.118033988749895),
        (-0.500000000000000, 0.500000000000000, -2.118033988749895),
        (-0.500000000000000, -0.500000000000000, 2.118033988749895),
        (-0.500000000000000, -0.500000000000000, -2.118033988749895),
        (2.118033988749895, 0.500000000000000, 0.500000000000000),
        (2.118033988749895, 0.500000000000000, -0.500000000000000),
        (2.118033988749895, -0.500000000000000, 0.500000000000000),
        (2.118033988749895, -0.500000000000000, -0.500000000000000),
        (-2.118033988749895, 0.500000000000000, 0.500000000000000),
        (-2.118033988749895, 0.500000000000000, -0.500000000000000),
        (-2.118033988749895, -0.500000000000000, 0.500000000000000),
        (-2.118033988749895, -0.500000000000000, -0.500000000000000),
        (0.500000000000000, 1.394427190999916, 1.670820393249937),
        (0.500000000000000, 2.118033988749895, -0.500000000000000),
        (0.500000000000000, -1.394427190999916, 1.670820393249937),
        (0.500000000000000, -2.118033988749895, -0.500000000000000),
        (-0.500000000000000, 1.394427190999916, 1.670820393249937),
        (-0.500000000000000, 2.118033988749895, -0.500000000000000),
        (-0.500000000000000, -1.394427190999916, 1.670820393249937),
        (-0.500000000000000, -2.118033988749895, -0.500000000000000),
        (0.000000000000000, 2.203444185374863, 0.361803398874989),
        (0.000000000000000, 1.309016994374947, -1.809016994374947),
        (0.000000000000000, -2.203444185374863, 0.361803398874989),
        (0.000000000000000, -1.309016994374947, -1.809016994374947),
        (1.809016994374947, 0.000000000000000, 1.309016994374947),
        (1.809016994374947, 0.000000000000000, -1.309016994374947),
        (-1.809016994374947, 0.000000000000000, 1.309016994374947),
        (-1.809016994374947, 0.000000000000000, -1.309016994374947),
        (1.309016994374947, 1.809016994374947, 0.000000000000000),
        (1.309016994374947, -1.809016994374947, 0.000000000000000),
        (-1.309016994374947, 1.809016994374947, 0.000000000000000),
        (-1.309016994374947, -1.809016994374947, 0.000000000000000),
        (1.309016994374947, 0.809016994374947, 1.618033988749895),
        (1.309016994374947, 0.809016994374947, -1.618033988749895),
        (1.309016994374947, -0.809016994374947, 1.618033988749895),
        (1.309016994374947, -0.809016994374947, -1.618033988749895),
        (-1.309016994374947, 0.809016994374947, 1.618033988749895),
        (-1.309016994374947, 0.809016994374947, -1.618033988749895),
        (-1.309016994374947, -0.809016994374947, 1.618033988749895),
        (-1.309016994374947, -0.809016994374947, -1.618033988749895),
        (1.618033988749895, 1.309016994374947, 0.809016994374947),
        (1.618033988749895, 1.309016994374947, -0.809016994374947),
        (1.618033988749895, -1.309016994374947, 0.809016994374947),
        (1.618033988749895, -1.309016994374947, -0.809016994374947),
        (-1.618033988749895, 1.309016994374947, 0.809016994374947),
        (-1.618033988749895, 1.309016994374947, -0.809016994374947),
        (-1.618033988749895, -1.309016994374947, 0.809016994374947),
        (-1.618033988749895, -1.309016994374947, -0.809016994374947),
        (0.809016994374947, 1.894427190999916, 0.861803398874989),
        (0.809016994374947, 1.618033988749895, -1.309016994374947),
        (0.809016994374947, -1.894427190999916, 0.861803398874989),
        (0.809016994374947, -1.618033988749895, -1.309016994374947),
        (-0.809016994374947, 1.894427190999916, 0.861803398874989),
        (-0.809016994374947, 1.618033988749895, -1.309016994374947),
        (-0.809016994374947, -1.894427190999916, 0.861803398874989),
        (-0.809016994374947, -1.618033988749895, -1.309016994374947),
    ])

def ParabiaugmentedDodecahedron():
    return np.array([
        (0.000000000000000, 0.500000000000000, 1.309016994374947),
        (0.000000000000000, 0.500000000000000, -1.309016994374947),
        (0.000000000000000, -0.500000000000000, 1.309016994374947),
        (0.000000000000000, -0.500000000000000, -1.309016994374947),
        (1.309016994374947, 0.000000000000000, 0.500000000000000),
        (1.309016994374947, 0.000000000000000, -0.500000000000000),
        (-1.309016994374947, 0.000000000000000, 0.500000000000000),
        (-1.309016994374947, 0.000000000000000, -0.500000000000000),
        (0.500000000000000, 1.309016994374947, 0.000000000000000),
        (0.500000000000000, -1.309016994374947, 0.000000000000000),
        (-0.500000000000000, 1.309016994374947, 0.000000000000000),
        (-0.500000000000000, -1.309016994374947, 0.000000000000000),
        (0.809016994374947, 0.809016994374947, 0.809016994374947),
        (0.809016994374947, 0.809016994374947, -0.809016994374947),
        (0.809016994374947, -0.809016994374947, 0.809016994374947),
        (0.809016994374947, -0.809016994374947, -0.809016994374947),
        (-0.809016994374947, 0.809016994374947, 0.809016994374947),
        (-0.809016994374947, 0.809016994374947, -0.809016994374947),
        (-0.809016994374947, -0.809016994374947, 0.809016994374947),
        (-0.809016994374947, -0.809016994374947, -0.809016994374947),
        (0.000000000000000, 1.394427190999916, -0.861803398874989),
        (0.000000000000000, -1.394427190999916, 0.861803398874989),
    ])

def SquarePyramid():
    return np.array([
        (0.707106781186548, 0.000000000000000, 0.000000000000000),
        (-0.707106781186548, 0.000000000000000, 0.000000000000000),
        (0.000000000000000, 0.707106781186548, 0.000000000000000),
        (0.000000000000000, -0.707106781186548, 0.000000000000000),
        (0.000000000000000, 0.000000000000000, 0.707106781186548),
    ])

def ElongatedSquareCupola():
    return np.array([
        (1.207106781186547, 0.500000000000000, 0.500000000000000),
        (1.207106781186547, 0.500000000000000, -0.500000000000000),
        (1.207106781186547, -0.500000000000000, 0.500000000000000),
        (1.207106781186547, -0.500000000000000, -0.500000000000000),
        (-1.207106781186547, 0.500000000000000, 0.500000000000000),
        (-1.207106781186547, 0.500000000000000, -0.500000000000000),
        (-1.207106781186547, -0.500000000000000, 0.500000000000000),
        (-1.207106781186547, -0.500000000000000, -0.500000000000000),
        (0.500000000000000, 1.207106781186547, 0.500000000000000),
        (0.500000000000000, 1.207106781186547, -0.500000000000000),
        (0.500000000000000, -1.207106781186547, 0.500000000000000),
        (0.500000000000000, -1.207106781186547, -0.500000000000000),
        (-0.500000000000000, 1.207106781186547, 0.500000000000000),
        (-0.500000000000000, 1.207106781186547, -0.500000000000000),
        (-0.500000000000000, -1.207106781186547, 0.500000000000000),
        (-0.500000000000000, -1.207106781186547, -0.500000000000000),
        (0.500000000000000, 0.500000000000000, 1.207106781186547),
        (0.500000000000000, -0.500000000000000, 1.207106781186547),
        (-0.500000000000000, 0.500000000000000, 1.207106781186547),
        (-0.500000000000000, -0.500000000000000, 1.207106781186547),
    ])

def DiminishedRhombicosidodecahedron():
    return np.array([
        (0.500000000000000, 0.500000000000000, 2.118033988749895),
        (0.500000000000000, 0.500000000000000, -2.118033988749895),
        (0.500000000000000, -0.500000000000000, 2.118033988749895),
        (0.500000000000000, -0.500000000000000, -2.118033988749895),
        (-0.500000000000000, 0.500000000000000, 2.118033988749895),
        (-0.500000000000000, 0.500000000000000, -2.118033988749895),
        (-0.500000000000000, -0.500000000000000, 2.118033988749895),
        (-0.500000000000000, -0.500000000000000, -2.118033988749895),
        (2.118033988749895, 0.500000000000000, 0.500000000000000),
        (2.118033988749895, 0.500000000000000, -0.500000000000000),
        (2.118033988749895, -0.500000000000000, 0.500000000000000),
        (2.118033988749895, -0.500000000000000, -0.500000000000000),
        (-2.118033988749895, 0.500000000000000, 0.500000000000000),
        (-2.118033988749895, 0.500000000000000, -0.500000000000000),
        (-2.118033988749895, -0.500000000000000, 0.500000000000000),
        (-2.118033988749895, -0.500000000000000, -0.500000000000000),
        (0.500000000000000, 2.118033988749895, -0.500000000000000),
        (0.500000000000000, -2.118033988749895, 0.500000000000000),
        (0.500000000000000, -2.118033988749895, -0.500000000000000),
        (-0.500000000000000, 2.118033988749895, -0.500000000000000),
        (-0.500000000000000, -2.118033988749895, 0.500000000000000),
        (-0.500000000000000, -2.118033988749895, -0.500000000000000),
        (0.000000000000000, 1.309016994374947, -1.809016994374947),
        (0.000000000000000, -1.309016994374947, 1.809016994374947),
        (0.000000000000000, -1.309016994374947, -1.809016994374947),
        (1.809016994374947, 0.000000000000000, 1.309016994374947),
        (1.809016994374947, 0.000000000000000, -1.309016994374947),
        (-1.809016994374947, 0.000000000000000, 1.309016994374947),
        (-1.809016994374947, 0.000000000000000, -1.309016994374947),
        (1.309016994374947, 1.809016994374947, 0.000000000000000),
        (1.309016994374947, -1.809016994374947, 0.000000000000000),
        (-1.309016994374947, 1.809016994374947, 0.000000000000000),
        (-1.309016994374947, -1.809016994374947, 0.000000000000000),
        (1.309016994374947, 0.809016994374947, 1.618033988749895),
        (1.309016994374947, 0.809016994374947, -1.618033988749895),
        (1.309016994374947, -0.809016994374947, 1.618033988749895),
        (1.309016994374947, -0.809016994374947, -1.618033988749895),
        (-1.309016994374947, 0.809016994374947, 1.618033988749895),
        (-1.309016994374947, 0.809016994374947, -1.618033988749895),
        (-1.309016994374947, -0.809016994374947, 1.618033988749895),
        (-1.309016994374947, -0.809016994374947, -1.618033988749895),
        (1.618033988749895, 1.309016994374947, 0.809016994374947),
        (1.618033988749895, 1.309016994374947, -0.809016994374947),
        (1.618033988749895, -1.309016994374947, 0.809016994374947),
        (1.618033988749895, -1.309016994374947, -0.809016994374947),
        (-1.618033988749895, 1.309016994374947, 0.809016994374947),
        (-1.618033988749895, 1.309016994374947, -0.809016994374947),
        (-1.618033988749895, -1.309016994374947, 0.809016994374947),
        (-1.618033988749895, -1.309016994374947, -0.809016994374947),
        (0.809016994374947, 1.618033988749895, -1.309016994374947),
        (0.809016994374947, -1.618033988749895, 1.309016994374947),
        (0.809016994374947, -1.618033988749895, -1.309016994374947),
        (-0.809016994374947, 1.618033988749895, -1.309016994374947),
        (-0.809016994374947, -1.618033988749895, 1.309016994374947),
        (-0.809016994374947, -1.618033988749895, -1.309016994374947),
    ])

def AugmentedTriangularPrism():
    return np.array([
        (0.500000000000000, 0.500000000000000, 0.288675134594813),
        (0.500000000000000, -0.500000000000000, 0.288675134594813),
        (-0.500000000000000, 0.500000000000000, 0.288675134594813),
        (-0.500000000000000, -0.500000000000000, 0.288675134594813),
        (0.000000000000000, 0.500000000000000, -0.577350269189626),
        (0.000000000000000, -0.500000000000000, -0.577350269189626),
        (0.000000000000000, 0.000000000000000, 0.995781915781360),
    ])

def ElongatedTriangularDipyramid():
    return np.array([
        (0.500000000000000, -0.288675134594813, 0.500000000000000),
        (0.500000000000000, -0.288675134594813, -0.500000000000000),
        (-0.500000000000000, -0.288675134594813, 0.500000000000000),
        (-0.500000000000000, -0.288675134594813, -0.500000000000000),
        (0.000000000000000, 0.577350269189626, 0.500000000000000),
        (0.000000000000000, 0.577350269189626, -0.500000000000000),
        (0.000000000000000, 0.000000000000000, 1.316496580927726),
        (0.000000000000000, 0.000000000000000, -1.316496580927726),
    ])

def Bilunabirotunda():
    return np.array([
        (0.500000000000000, 0.809016994374947, 0.500000000000000),
        (0.500000000000000, 0.809016994374947, -0.500000000000000),
        (0.500000000000000, -0.809016994374947, 0.500000000000000),
        (0.500000000000000, -0.809016994374947, -0.500000000000000),
        (-0.500000000000000, 0.809016994374947, 0.500000000000000),
        (-0.500000000000000, 0.809016994374947, -0.500000000000000),
        (-0.500000000000000, -0.809016994374947, 0.500000000000000),
        (-0.500000000000000, -0.809016994374947, -0.500000000000000),
        (1.309016994374947, 0.500000000000000, 0.000000000000000),
        (1.309016994374947, -0.500000000000000, 0.000000000000000),
        (-1.309016994374947, 0.500000000000000, 0.000000000000000),
        (-1.309016994374947, -0.500000000000000, 0.000000000000000),
        (0.000000000000000, 0.000000000000000, 0.809016994374947),
        (0.000000000000000, 0.000000000000000, -0.809016994374947),
    ])

def PentagonalOrthobirotunda():
    return np.array([
        (1.618033988749895, 0.000000000000000, 0.000000000000000),
        (-1.618033988749895, 0.000000000000000, 0.000000000000000),
        (1.309016994374947, 0.951056516295154, 0.000000000000000),
        (1.309016994374947, -0.951056516295154, 0.000000000000000),
        (-1.309016994374947, 0.951056516295154, 0.000000000000000),
        (-1.309016994374947, -0.951056516295154, 0.000000000000000),
        (0.500000000000000, 1.538841768587627, 0.000000000000000),
        (0.500000000000000, -1.538841768587627, 0.000000000000000),
        (-0.500000000000000, 1.538841768587627, 0.000000000000000),
        (-0.500000000000000, -1.538841768587627, 0.000000000000000),
        (0.809016994374947, 0.262865556059567, 1.376381920471174),
        (0.809016994374947, 0.262865556059567, -1.376381920471174),
        (-0.809016994374947, 0.262865556059567, 1.376381920471174),
        (-0.809016994374947, 0.262865556059567, -1.376381920471174),
        (0.500000000000000, -0.688190960235587, 1.376381920471174),
        (0.500000000000000, -0.688190960235587, -1.376381920471174),
        (-0.500000000000000, -0.688190960235587, 1.376381920471174),
        (-0.500000000000000, -0.688190960235587, -1.376381920471174),
        (0.000000000000000, 0.850650808352040, 1.376381920471174),
        (0.000000000000000, 0.850650808352040, -1.376381920471174),
        (1.309016994374947, -0.425325404176020, 0.850650808352040),
        (1.309016994374947, -0.425325404176020, -0.850650808352040),
        (-1.309016994374947, -0.425325404176020, 0.850650808352040),
        (-1.309016994374947, -0.425325404176020, -0.850650808352040),
        (0.809016994374947, 1.113516364411607, 0.850650808352040),
        (0.809016994374947, 1.113516364411607, -0.850650808352040),
        (-0.809016994374947, 1.113516364411607, 0.850650808352040),
        (-0.809016994374947, 1.113516364411607, -0.850650808352040),
        (0.000000000000000, -1.376381920471174, 0.850650808352040),
        (0.000000000000000, -1.376381920471174, -0.850650808352040),
    ])

def MetabidiminishedIcosahedron():
    return np.array([
        (0.500000000000000, 0.000000000000000, 0.809016994374947),
        (0.500000000000000, 0.000000000000000, -0.809016994374947),
        (-0.500000000000000, 0.000000000000000, 0.809016994374947),
        (-0.500000000000000, 0.000000000000000, -0.809016994374947),
        (0.809016994374947, 0.500000000000000, 0.000000000000000),
        (0.809016994374947, -0.500000000000000, 0.000000000000000),
        (-0.809016994374947, 0.500000000000000, 0.000000000000000),
        (-0.809016994374947, -0.500000000000000, 0.000000000000000),
        (0.000000000000000, 0.809016994374947, -0.500000000000000),
        (0.000000000000000, -0.809016994374947, -0.500000000000000),
    ])

def GyroelongatedSquarePyramid():
    return np.array([
        (0.000000000000000, 0.707106781186548, 0.420448207626857),
        (0.000000000000000, -0.707106781186548, 0.420448207626857),
        (0.707106781186548, 0.000000000000000, 0.420448207626857),
        (-0.707106781186548, 0.000000000000000, 0.420448207626857),
        (0.500000000000000, 0.500000000000000, -0.420448207626857),
        (0.500000000000000, -0.500000000000000, -0.420448207626857),
        (-0.500000000000000, 0.500000000000000, -0.420448207626857),
        (-0.500000000000000, -0.500000000000000, -0.420448207626857),
        (0.000000000000000, 0.000000000000000, 1.127554988813405),
    ])

def TriaugmentedTruncatedDodecahedron():
    return np.array([
        (0.000000000000000, 0.500000000000000, 2.927050983124842),
        (0.000000000000000, 0.500000000000000, -2.927050983124842),
        (0.000000000000000, -0.500000000000000, 2.927050983124842),
        (0.000000000000000, -0.500000000000000, -2.927050983124842),
        (2.927050983124842, 0.000000000000000, 0.500000000000000),
        (2.927050983124842, 0.000000000000000, -0.500000000000000),
        (-2.927050983124842, 0.000000000000000, 0.500000000000000),
        (-2.927050983124842, 0.000000000000000, -0.500000000000000),
        (0.500000000000000, 2.927050983124842, 0.000000000000000),
        (0.500000000000000, -2.927050983124842, 0.000000000000000),
        (-0.500000000000000, 2.927050983124842, 0.000000000000000),
        (-0.500000000000000, -2.927050983124842, 0.000000000000000),
        (0.500000000000000, 1.309016994374947, 2.618033988749895),
        (0.500000000000000, 1.309016994374947, -2.618033988749895),
        (0.500000000000000, -1.309016994374947, 2.618033988749895),
        (0.500000000000000, -1.309016994374947, -2.618033988749895),
        (-0.500000000000000, 1.309016994374947, 2.618033988749895),
        (-0.500000000000000, 1.309016994374947, -2.618033988749895),
        (-0.500000000000000, -1.309016994374947, 2.618033988749895),
        (-0.500000000000000, -1.309016994374947, -2.618033988749895),
        (2.618033988749895, 0.500000000000000, 1.309016994374947),
        (2.618033988749895, 0.500000000000000, -1.309016994374947),
        (2.618033988749895, -0.500000000000000, 1.309016994374947),
        (2.618033988749895, -0.500000000000000, -1.309016994374947),
        (-2.618033988749895, 0.500000000000000, 1.309016994374947),
        (-2.618033988749895, 0.500000000000000, -1.309016994374947),
        (-2.618033988749895, -0.500000000000000, 1.309016994374947),
        (-2.618033988749895, -0.500000000000000, -1.309016994374947),
        (1.309016994374947, 2.618033988749895, 0.500000000000000),
        (1.309016994374947, 2.618033988749895, -0.500000000000000),
        (1.309016994374947, -2.618033988749895, 0.500000000000000),
        (1.309016994374947, -2.618033988749895, -0.500000000000000),
        (-1.309016994374947, 2.618033988749895, 0.500000000000000),
        (-1.309016994374947, 2.618033988749895, -0.500000000000000),
        (-1.309016994374947, -2.618033988749895, 0.500000000000000),
        (-1.309016994374947, -2.618033988749895, -0.500000000000000),
        (1.309016994374947, 1.618033988749895, 2.118033988749895),
        (1.309016994374947, 1.618033988749895, -2.118033988749895),
        (1.309016994374947, -1.618033988749895, 2.118033988749895),
        (1.309016994374947, -1.618033988749895, -2.118033988749895),
        (-1.309016994374947, 1.618033988749895, 2.118033988749895),
        (-1.309016994374947, 1.618033988749895, -2.118033988749895),
        (-1.309016994374947, -1.618033988749895, 2.118033988749895),
        (-1.309016994374947, -1.618033988749895, -2.118033988749895),
        (2.118033988749895, 1.309016994374947, 1.618033988749895),
        (2.118033988749895, 1.309016994374947, -1.618033988749895),
        (2.118033988749895, -1.309016994374947, 1.618033988749895),
        (2.118033988749895, -1.309016994374947, -1.618033988749895),
        (-2.118033988749895, 1.309016994374947, 1.618033988749895),
        (-2.118033988749895, 1.309016994374947, -1.618033988749895),
        (-2.118033988749895, -1.309016994374947, 1.618033988749895),
        (-2.118033988749895, -1.309016994374947, -1.618033988749895),
        (1.618033988749895, 2.118033988749895, 1.309016994374947),
        (1.618033988749895, 2.118033988749895, -1.309016994374947),
        (1.618033988749895, -2.118033988749895, 1.309016994374947),
        (1.618033988749895, -2.118033988749895, -1.309016994374947),
        (-1.618033988749895, 2.118033988749895, 1.309016994374947),
        (-1.618033988749895, 2.118033988749895, -1.309016994374947),
        (-1.618033988749895, -2.118033988749895, 1.309016994374947),
        (-1.618033988749895, -2.118033988749895, -1.309016994374947),
        (2.703444185374863, 1.361803398874990, 0.809016994374947),
        (2.703444185374863, 1.361803398874990, -0.809016994374947),
        (-2.703444185374863, 1.361803398874990, 0.809016994374947),
        (-2.703444185374863, 1.361803398874990, -0.809016994374947),
        (0.809016994374947, -2.703444185374863, 1.361803398874990),
        (-0.809016994374947, -2.703444185374863, 1.361803398874990),
        (2.203444185374863, 2.170820393249937, 0.500000000000000),
        (2.203444185374863, 2.170820393249937, -0.500000000000000),
        (-2.203444185374863, 2.170820393249937, 0.500000000000000),
        (-2.203444185374863, 2.170820393249937, -0.500000000000000),
        (0.500000000000000, -2.203444185374863, 2.170820393249937),
        (-0.500000000000000, -2.203444185374863, 2.170820393249937),
        (3.012461179749811, 0.861803398874989, 0.000000000000000),
        (-3.012461179749811, 0.861803398874989, 0.000000000000000),
        (0.000000000000000, -3.012461179749811, 0.861803398874989),
    ])

def ElongatedPentagonalOrthocupolarotunda():
    return np.array([
        (1.618033988749895, 0.000000000000000, 0.500000000000000),
        (1.618033988749895, 0.000000000000000, -0.500000000000000),
        (-1.618033988749895, 0.000000000000000, 0.500000000000000),
        (-1.618033988749895, 0.000000000000000, -0.500000000000000),
        (1.309016994374947, 0.951056516295154, 0.500000000000000),
        (1.309016994374947, 0.951056516295154, -0.500000000000000),
        (1.309016994374947, -0.951056516295154, 0.500000000000000),
        (1.309016994374947, -0.951056516295154, -0.500000000000000),
        (-1.309016994374947, 0.951056516295154, 0.500000000000000),
        (-1.309016994374947, 0.951056516295154, -0.500000000000000),
        (-1.309016994374947, -0.951056516295154, 0.500000000000000),
        (-1.309016994374947, -0.951056516295154, -0.500000000000000),
        (0.500000000000000, 1.538841768587627, 0.500000000000000),
        (0.500000000000000, 1.538841768587627, -0.500000000000000),
        (0.500000000000000, -1.538841768587627, 0.500000000000000),
        (0.500000000000000, -1.538841768587627, -0.500000000000000),
        (-0.500000000000000, 1.538841768587627, 0.500000000000000),
        (-0.500000000000000, 1.538841768587627, -0.500000000000000),
        (-0.500000000000000, -1.538841768587627, 0.500000000000000),
        (-0.500000000000000, -1.538841768587627, -0.500000000000000),
        (1.309016994374947, -0.425325404176020, 1.350650808352040),
        (-1.309016994374947, -0.425325404176020, 1.350650808352040),
        (0.809016994374947, 1.113516364411607, 1.350650808352040),
        (-0.809016994374947, 1.113516364411607, 1.350650808352040),
        (0.000000000000000, -1.376381920471174, 1.350650808352040),
        (0.809016994374947, 0.262865556059567, 1.876381920471174),
        (-0.809016994374947, 0.262865556059567, 1.876381920471174),
        (0.500000000000000, -0.688190960235587, 1.876381920471174),
        (-0.500000000000000, -0.688190960235587, 1.876381920471174),
        (0.000000000000000, 0.850650808352040, 1.876381920471174),
        (0.809016994374947, 0.262865556059567, -1.025731112119134),
        (-0.809016994374947, 0.262865556059567, -1.025731112119134),
        (0.500000000000000, -0.688190960235587, -1.025731112119134),
        (-0.500000000000000, -0.688190960235587, -1.025731112119134),
        (0.000000000000000, 0.850650808352040, -1.025731112119134),
    ])

def ElongatedPentagonalOrthobirotunda():
    return np.array([
        (1.618033988749895, 0.000000000000000, 0.500000000000000),
        (1.618033988749895, 0.000000000000000, -0.500000000000000),
        (-1.618033988749895, 0.000000000000000, 0.500000000000000),
        (-1.618033988749895, 0.000000000000000, -0.500000000000000),
        (1.309016994374947, 0.951056516295154, 0.500000000000000),
        (1.309016994374947, 0.951056516295154, -0.500000000000000),
        (1.309016994374947, -0.951056516295154, 0.500000000000000),
        (1.309016994374947, -0.951056516295154, -0.500000000000000),
        (-1.309016994374947, 0.951056516295154, 0.500000000000000),
        (-1.309016994374947, 0.951056516295154, -0.500000000000000),
        (-1.309016994374947, -0.951056516295154, 0.500000000000000),
        (-1.309016994374947, -0.951056516295154, -0.500000000000000),
        (0.500000000000000, 1.538841768587627, 0.500000000000000),
        (0.500000000000000, 1.538841768587627, -0.500000000000000),
        (0.500000000000000, -1.538841768587627, 0.500000000000000),
        (0.500000000000000, -1.538841768587627, -0.500000000000000),
        (-0.500000000000000, 1.538841768587627, 0.500000000000000),
        (-0.500000000000000, 1.538841768587627, -0.500000000000000),
        (-0.500000000000000, -1.538841768587627, 0.500000000000000),
        (-0.500000000000000, -1.538841768587627, -0.500000000000000),
        (0.809016994374947, 0.262865556059567, 1.876381920471174),
        (0.809016994374947, 0.262865556059567, -1.876381920471174),
        (-0.809016994374947, 0.262865556059567, 1.876381920471174),
        (-0.809016994374947, 0.262865556059567, -1.876381920471174),
        (0.500000000000000, -0.688190960235587, 1.876381920471174),
        (0.500000000000000, -0.688190960235587, -1.876381920471174),
        (-0.500000000000000, -0.688190960235587, 1.876381920471174),
        (-0.500000000000000, -0.688190960235587, -1.876381920471174),
        (0.000000000000000, 0.850650808352040, 1.876381920471174),
        (0.000000000000000, 0.850650808352040, -1.876381920471174),
        (1.309016994374947, -0.425325404176020, 1.350650808352040),
        (1.309016994374947, -0.425325404176020, -1.350650808352040),
        (-1.309016994374947, -0.425325404176020, 1.350650808352040),
        (-1.309016994374947, -0.425325404176020, -1.350650808352040),
        (0.809016994374947, 1.113516364411607, 1.350650808352040),
        (0.809016994374947, 1.113516364411607, -1.350650808352040),
        (-0.809016994374947, 1.113516364411607, 1.350650808352040),
        (-0.809016994374947, 1.113516364411607, -1.350650808352040),
        (0.000000000000000, -1.376381920471174, 1.350650808352040),
        (0.000000000000000, -1.376381920471174, -1.350650808352040),
    ])

def PentagonalDipyramid():
    return np.array([
        (0.000000000000000, 0.000000000000000, -0.525731112119134),
        (0.000000000000000, 0.000000000000000, 0.525731112119134),
        (0.809016994374947, 0.262865556059567, 0.000000000000000),
        (-0.809016994374947, 0.262865556059567, 0.000000000000000),
        (0.500000000000000, -0.688190960235587, 0.000000000000000),
        (-0.500000000000000, -0.688190960235587, 0.000000000000000),
        (0.000000000000000, 0.850650808352040, 0.000000000000000),
    ])

def GyroelongatedTriangularBicupola():
    return np.array([
        (1.000000000000000, 0.000000000000000, 0.427799838583676),
        (-1.000000000000000, 0.000000000000000, 0.427799838583676),
        (0.500000000000000, 0.866025403784439, 0.427799838583676),
        (0.500000000000000, -0.866025403784439, 0.427799838583676),
        (-0.500000000000000, 0.866025403784439, 0.427799838583676),
        (-0.500000000000000, -0.866025403784439, 0.427799838583676),
        (0.866025403784439, 0.500000000000000, -0.427799838583676),
        (0.866025403784439, -0.500000000000000, -0.427799838583676),
        (-0.866025403784439, 0.500000000000000, -0.427799838583676),
        (-0.866025403784439, -0.500000000000000, -0.427799838583676),
        (0.000000000000000, 1.000000000000000, -0.427799838583676),
        (0.000000000000000, -1.000000000000000, -0.427799838583676),
        (0.500000000000000, -0.288675134594813, 1.244296419511402),
        (-0.500000000000000, -0.288675134594813, 1.244296419511402),
        (0.000000000000000, 0.577350269189626, 1.244296419511402),
        (0.288675134594813, 0.500000000000000, -1.244296419511402),
        (0.288675134594813, -0.500000000000000, -1.244296419511402),
        (-0.577350269189626, 0.000000000000000, -1.244296419511402),
    ])

def MetabiaugmentedDodecahedron():
    return np.array([
        (0.000000000000000, 0.500000000000000, 1.309016994374947),
        (0.000000000000000, 0.500000000000000, -1.309016994374947),
        (0.000000000000000, -0.500000000000000, 1.309016994374947),
        (0.000000000000000, -0.500000000000000, -1.309016994374947),
        (1.309016994374947, 0.000000000000000, 0.500000000000000),
        (1.309016994374947, 0.000000000000000, -0.500000000000000),
        (-1.309016994374947, 0.000000000000000, 0.500000000000000),
        (-1.309016994374947, 0.000000000000000, -0.500000000000000),
        (0.500000000000000, 1.309016994374947, 0.000000000000000),
        (0.500000000000000, -1.309016994374947, 0.000000000000000),
        (-0.500000000000000, 1.309016994374947, 0.000000000000000),
        (-0.500000000000000, -1.309016994374947, 0.000000000000000),
        (0.809016994374947, 0.809016994374947, 0.809016994374947),
        (0.809016994374947, 0.809016994374947, -0.809016994374947),
        (0.809016994374947, -0.809016994374947, 0.809016994374947),
        (0.809016994374947, -0.809016994374947, -0.809016994374947),
        (-0.809016994374947, 0.809016994374947, 0.809016994374947),
        (-0.809016994374947, 0.809016994374947, -0.809016994374947),
        (-0.809016994374947, -0.809016994374947, 0.809016994374947),
        (-0.809016994374947, -0.809016994374947, -0.809016994374947),
        (0.000000000000000, 1.394427190999916, 0.861803398874989),
        (0.000000000000000, -1.394427190999916, 0.861803398874989),
    ])

def TridiminishedRhombicosidodecahedron():
    return np.array([
        (0.500000000000000, 0.500000000000000, 2.118033988749895),
        (0.500000000000000, 0.500000000000000, -2.118033988749895),
        (0.500000000000000, -0.500000000000000, 2.118033988749895),
        (0.500000000000000, -0.500000000000000, -2.118033988749895),
        (-0.500000000000000, 0.500000000000000, 2.118033988749895),
        (-0.500000000000000, 0.500000000000000, -2.118033988749895),
        (-0.500000000000000, -0.500000000000000, 2.118033988749895),
        (-0.500000000000000, -0.500000000000000, -2.118033988749895),
        (2.118033988749895, 0.500000000000000, 0.500000000000000),
        (2.118033988749895, 0.500000000000000, -0.500000000000000),
        (-2.118033988749895, 0.500000000000000, 0.500000000000000),
        (-2.118033988749895, 0.500000000000000, -0.500000000000000),
        (0.500000000000000, 2.118033988749895, -0.500000000000000),
        (0.500000000000000, -2.118033988749895, 0.500000000000000),
        (0.500000000000000, -2.118033988749895, -0.500000000000000),
        (-0.500000000000000, 2.118033988749895, -0.500000000000000),
        (-0.500000000000000, -2.118033988749895, 0.500000000000000),
        (-0.500000000000000, -2.118033988749895, -0.500000000000000),
        (0.000000000000000, 1.309016994374947, -1.809016994374947),
        (0.000000000000000, -1.309016994374947, 1.809016994374947),
        (0.000000000000000, -1.309016994374947, -1.809016994374947),
        (1.809016994374947, 0.000000000000000, 1.309016994374947),
        (1.809016994374947, 0.000000000000000, -1.309016994374947),
        (-1.809016994374947, 0.000000000000000, 1.309016994374947),
        (-1.809016994374947, 0.000000000000000, -1.309016994374947),
        (1.309016994374947, 1.809016994374947, 0.000000000000000),
        (-1.309016994374947, 1.809016994374947, 0.000000000000000),
        (1.309016994374947, 0.809016994374947, 1.618033988749895),
        (1.309016994374947, 0.809016994374947, -1.618033988749895),
        (1.309016994374947, -0.809016994374947, 1.618033988749895),
        (1.309016994374947, -0.809016994374947, -1.618033988749895),
        (-1.309016994374947, 0.809016994374947, 1.618033988749895),
        (-1.309016994374947, 0.809016994374947, -1.618033988749895),
        (-1.309016994374947, -0.809016994374947, 1.618033988749895),
        (-1.309016994374947, -0.809016994374947, -1.618033988749895),
        (1.618033988749895, 1.309016994374947, 0.809016994374947),
        (1.618033988749895, 1.309016994374947, -0.809016994374947),
        (-1.618033988749895, 1.309016994374947, 0.809016994374947),
        (-1.618033988749895, 1.309016994374947, -0.809016994374947),
        (0.809016994374947, 1.618033988749895, -1.309016994374947),
        (0.809016994374947, -1.618033988749895, 1.309016994374947),
        (0.809016994374947, -1.618033988749895, -1.309016994374947),
        (-0.809016994374947, 1.618033988749895, -1.309016994374947),
        (-0.809016994374947, -1.618033988749895, 1.309016994374947),
        (-0.809016994374947, -1.618033988749895, -1.309016994374947),
    ])

def GyroelongatedTriangularCupola():
    return np.array([
        (1.000000000000000, 0.000000000000000, 0.427799838583676),
        (-1.000000000000000, 0.000000000000000, 0.427799838583676),
        (0.500000000000000, 0.866025403784439, 0.427799838583676),
        (0.500000000000000, -0.866025403784439, 0.427799838583676),
        (-0.500000000000000, 0.866025403784439, 0.427799838583676),
        (-0.500000000000000, -0.866025403784439, 0.427799838583676),
        (0.866025403784439, 0.500000000000000, -0.427799838583676),
        (0.866025403784439, -0.500000000000000, -0.427799838583676),
        (-0.866025403784439, 0.500000000000000, -0.427799838583676),
        (-0.866025403784439, -0.500000000000000, -0.427799838583676),
        (0.000000000000000, 1.000000000000000, -0.427799838583676),
        (0.000000000000000, -1.000000000000000, -0.427799838583676),
        (0.500000000000000, -0.288675134594813, 1.244296419511402),
        (-0.500000000000000, -0.288675134594813, 1.244296419511402),
        (0.000000000000000, 0.577350269189626, 1.244296419511402),
    ])

def ParagyrateDiminishedRhombicosidodecahedron():
    return np.array([
        (0.500000000000000, 0.500000000000000, 2.118033988749895),
        (0.500000000000000, 0.500000000000000, -2.118033988749895),
        (0.500000000000000, -0.500000000000000, 2.118033988749895),
        (0.500000000000000, -0.500000000000000, -2.118033988749895),
        (-0.500000000000000, 0.500000000000000, 2.118033988749895),
        (-0.500000000000000, 0.500000000000000, -2.118033988749895),
        (-0.500000000000000, -0.500000000000000, 2.118033988749895),
        (-0.500000000000000, -0.500000000000000, -2.118033988749895),
        (2.118033988749895, 0.500000000000000, 0.500000000000000),
        (2.118033988749895, 0.500000000000000, -0.500000000000000),
        (2.118033988749895, -0.500000000000000, 0.500000000000000),
        (2.118033988749895, -0.500000000000000, -0.500000000000000),
        (-2.118033988749895, 0.500000000000000, 0.500000000000000),
        (-2.118033988749895, 0.500000000000000, -0.500000000000000),
        (-2.118033988749895, -0.500000000000000, 0.500000000000000),
        (-2.118033988749895, -0.500000000000000, -0.500000000000000),
        (0.500000000000000, 2.118033988749895, -0.500000000000000),
        (0.500000000000000, -2.118033988749895, 0.500000000000000),
        (0.500000000000000, -1.394427190999916, -1.670820393249937),
        (-0.500000000000000, 2.118033988749895, -0.500000000000000),
        (-0.500000000000000, -2.118033988749895, 0.500000000000000),
        (-0.500000000000000, -1.394427190999916, -1.670820393249937),
        (0.000000000000000, 1.309016994374947, -1.809016994374947),
        (0.000000000000000, -1.309016994374947, 1.809016994374947),
        (0.000000000000000, -2.203444185374863, -0.361803398874989),
        (1.809016994374947, 0.000000000000000, 1.309016994374947),
        (1.809016994374947, 0.000000000000000, -1.309016994374947),
        (-1.809016994374947, 0.000000000000000, 1.309016994374947),
        (-1.809016994374947, 0.000000000000000, -1.309016994374947),
        (1.309016994374947, 1.809016994374947, 0.000000000000000),
        (1.309016994374947, -1.809016994374947, 0.000000000000000),
        (-1.309016994374947, 1.809016994374947, 0.000000000000000),
        (-1.309016994374947, -1.809016994374947, 0.000000000000000),
        (1.309016994374947, 0.809016994374947, 1.618033988749895),
        (1.309016994374947, 0.809016994374947, -1.618033988749895),
        (1.309016994374947, -0.809016994374947, 1.618033988749895),
        (1.309016994374947, -0.809016994374947, -1.618033988749895),
        (-1.309016994374947, 0.809016994374947, 1.618033988749895),
        (-1.309016994374947, 0.809016994374947, -1.618033988749895),
        (-1.309016994374947, -0.809016994374947, 1.618033988749895),
        (-1.309016994374947, -0.809016994374947, -1.618033988749895),
        (1.618033988749895, 1.309016994374947, 0.809016994374947),
        (1.618033988749895, 1.309016994374947, -0.809016994374947),
        (1.618033988749895, -1.309016994374947, 0.809016994374947),
        (1.618033988749895, -1.309016994374947, -0.809016994374947),
        (-1.618033988749895, 1.309016994374947, 0.809016994374947),
        (-1.618033988749895, 1.309016994374947, -0.809016994374947),
        (-1.618033988749895, -1.309016994374947, 0.809016994374947),
        (-1.618033988749895, -1.309016994374947, -0.809016994374947),
        (0.809016994374947, 1.618033988749895, -1.309016994374947),
        (0.809016994374947, -1.618033988749895, 1.309016994374947),
        (0.809016994374947, -1.894427190999916, -0.861803398874989),
        (-0.809016994374947, 1.618033988749895, -1.309016994374947),
        (-0.809016994374947, -1.618033988749895, 1.309016994374947),
        (-0.809016994374947, -1.894427190999916, -0.861803398874989),
    ])

def ElongatedPentagonalRotunda():
    return np.array([
        (1.618033988749895, 0.000000000000000, 0.500000000000000),
        (1.618033988749895, 0.000000000000000, -0.500000000000000),
        (-1.618033988749895, 0.000000000000000, 0.500000000000000),
        (-1.618033988749895, 0.000000000000000, -0.500000000000000),
        (1.309016994374947, 0.951056516295154, 0.500000000000000),
        (1.309016994374947, 0.951056516295154, -0.500000000000000),
        (1.309016994374947, -0.951056516295154, 0.500000000000000),
        (1.309016994374947, -0.951056516295154, -0.500000000000000),
        (-1.309016994374947, 0.951056516295154, 0.500000000000000),
        (-1.309016994374947, 0.951056516295154, -0.500000000000000),
        (-1.309016994374947, -0.951056516295154, 0.500000000000000),
        (-1.309016994374947, -0.951056516295154, -0.500000000000000),
        (0.500000000000000, 1.538841768587627, 0.500000000000000),
        (0.500000000000000, 1.538841768587627, -0.500000000000000),
        (0.500000000000000, -1.538841768587627, 0.500000000000000),
        (0.500000000000000, -1.538841768587627, -0.500000000000000),
        (-0.500000000000000, 1.538841768587627, 0.500000000000000),
        (-0.500000000000000, 1.538841768587627, -0.500000000000000),
        (-0.500000000000000, -1.538841768587627, 0.500000000000000),
        (-0.500000000000000, -1.538841768587627, -0.500000000000000),
        (1.309016994374947, -0.425325404176020, 1.350650808352040),
        (-1.309016994374947, -0.425325404176020, 1.350650808352040),
        (0.809016994374947, 1.113516364411607, 1.350650808352040),
        (-0.809016994374947, 1.113516364411607, 1.350650808352040),
        (0.000000000000000, -1.376381920471174, 1.350650808352040),
        (0.809016994374947, 0.262865556059567, 1.876381920471174),
        (-0.809016994374947, 0.262865556059567, 1.876381920471174),
        (0.500000000000000, -0.688190960235587, 1.876381920471174),
        (-0.500000000000000, -0.688190960235587, 1.876381920471174),
        (0.000000000000000, 0.850650808352040, 1.876381920471174),
    ])

def PentagonalRotunda():
    return np.array([
        (1.618033988749895, 0.000000000000000, 0.000000000000000),
        (-1.618033988749895, 0.000000000000000, 0.000000000000000),
        (0.000000000000000, 0.000000000000000, 1.618033988749895),
        (0.000000000000000, 1.618033988749895, 0.000000000000000),
        (1.309016994374947, 0.500000000000000, 0.809016994374947),
        (1.309016994374947, 0.500000000000000, -0.809016994374947),
        (1.309016994374947, -0.500000000000000, 0.809016994374947),
        (-1.309016994374947, 0.500000000000000, 0.809016994374947),
        (-1.309016994374947, 0.500000000000000, -0.809016994374947),
        (-1.309016994374947, -0.500000000000000, 0.809016994374947),
        (0.809016994374947, 1.309016994374947, 0.500000000000000),
        (0.809016994374947, 1.309016994374947, -0.500000000000000),
        (-0.809016994374947, 1.309016994374947, 0.500000000000000),
        (-0.809016994374947, 1.309016994374947, -0.500000000000000),
        (0.500000000000000, 0.809016994374947, 1.309016994374947),
        (0.500000000000000, 0.809016994374947, -1.309016994374947),
        (0.500000000000000, -0.809016994374947, 1.309016994374947),
        (-0.500000000000000, 0.809016994374947, 1.309016994374947),
        (-0.500000000000000, 0.809016994374947, -1.309016994374947),
        (-0.500000000000000, -0.809016994374947, 1.309016994374947),
    ])

def MetabiaugmentedHexagonalPrism():
    return np.array([
        (1.000000000000000, 0.500000000000000, 0.000000000000000),
        (1.000000000000000, -0.500000000000000, 0.000000000000000),
        (-1.000000000000000, 0.500000000000000, 0.000000000000000),
        (-1.000000000000000, -0.500000000000000, 0.000000000000000),
        (0.500000000000000, 0.500000000000000, 0.866025403784439),
        (0.500000000000000, 0.500000000000000, -0.866025403784439),
        (0.500000000000000, -0.500000000000000, 0.866025403784439),
        (0.500000000000000, -0.500000000000000, -0.866025403784439),
        (-0.500000000000000, 0.500000000000000, 0.866025403784439),
        (-0.500000000000000, 0.500000000000000, -0.866025403784439),
        (-0.500000000000000, -0.500000000000000, 0.866025403784439),
        (-0.500000000000000, -0.500000000000000, -0.866025403784439),
        (1.362372435695794, 0.000000000000000, 0.786566092485493),
        (-1.362372435695794, 0.000000000000000, 0.786566092485493),
    ])

def ElongatedPentagonalGyrocupolarotunda():
    return np.array([
        (1.618033988749895, 0.000000000000000, 0.500000000000000),
        (1.618033988749895, 0.000000000000000, -0.500000000000000),
        (-1.618033988749895, 0.000000000000000, 0.500000000000000),
        (-1.618033988749895, 0.000000000000000, -0.500000000000000),
        (1.309016994374947, 0.951056516295154, 0.500000000000000),
        (1.309016994374947, 0.951056516295154, -0.500000000000000),
        (1.309016994374947, -0.951056516295154, 0.500000000000000),
        (1.309016994374947, -0.951056516295154, -0.500000000000000),
        (-1.309016994374947, 0.951056516295154, 0.500000000000000),
        (-1.309016994374947, 0.951056516295154, -0.500000000000000),
        (-1.309016994374947, -0.951056516295154, 0.500000000000000),
        (-1.309016994374947, -0.951056516295154, -0.500000000000000),
        (0.500000000000000, 1.538841768587627, 0.500000000000000),
        (0.500000000000000, 1.538841768587627, -0.500000000000000),
        (0.500000000000000, -1.538841768587627, 0.500000000000000),
        (0.500000000000000, -1.538841768587627, -0.500000000000000),
        (-0.500000000000000, 1.538841768587627, 0.500000000000000),
        (-0.500000000000000, 1.538841768587627, -0.500000000000000),
        (-0.500000000000000, -1.538841768587627, 0.500000000000000),
        (-0.500000000000000, -1.538841768587627, -0.500000000000000),
        (1.309016994374947, -0.425325404176020, 1.350650808352040),
        (-1.309016994374947, -0.425325404176020, 1.350650808352040),
        (0.809016994374947, 1.113516364411607, 1.350650808352040),
        (-0.809016994374947, 1.113516364411607, 1.350650808352040),
        (0.000000000000000, -1.376381920471174, 1.350650808352040),
        (0.809016994374947, 0.262865556059567, 1.876381920471174),
        (-0.809016994374947, 0.262865556059567, 1.876381920471174),
        (0.500000000000000, -0.688190960235587, 1.876381920471174),
        (-0.500000000000000, -0.688190960235587, 1.876381920471174),
        (0.000000000000000, 0.850650808352040, 1.876381920471174),
        (0.809016994374947, -0.262865556059567, -1.025731112119134),
        (-0.809016994374947, -0.262865556059567, -1.025731112119134),
        (0.500000000000000, 0.688190960235587, -1.025731112119134),
        (-0.500000000000000, 0.688190960235587, -1.025731112119134),
        (0.000000000000000, -0.850650808352040, -1.025731112119134),
    ])

def Sphenocorona():
    return np.array([
        (0.852726942846417, 0.500000000000000, 0.000000000000000),
        (0.852726942846417, -0.500000000000000, 0.000000000000000),
        (-0.852726942846417, 0.500000000000000, 0.000000000000000),
        (-0.852726942846417, -0.500000000000000, 0.000000000000000),
        (0.500000000000000, 0.000000000000000, 0.790938495579916),
        (-0.500000000000000, 0.000000000000000, 0.790938495579916),
        (0.000000000000000, 0.500000000000000, -0.522356928683638),
        (0.000000000000000, -0.500000000000000, -0.522356928683638),
        (0.000000000000000, 0.789427626660872, 0.434842971507254),
        (0.000000000000000, -0.789427626660872, 0.434842971507254),
    ])

def ElongatedPentagonalOrthobicupola():
    return np.array([
        (1.618033988749895, 0.000000000000000, 0.500000000000000),
        (1.618033988749895, 0.000000000000000, -0.500000000000000),
        (-1.618033988749895, 0.000000000000000, 0.500000000000000),
        (-1.618033988749895, 0.000000000000000, -0.500000000000000),
        (1.309016994374947, 0.951056516295154, 0.500000000000000),
        (1.309016994374947, 0.951056516295154, -0.500000000000000),
        (1.309016994374947, -0.951056516295154, 0.500000000000000),
        (1.309016994374947, -0.951056516295154, -0.500000000000000),
        (-1.309016994374947, 0.951056516295154, 0.500000000000000),
        (-1.309016994374947, 0.951056516295154, -0.500000000000000),
        (-1.309016994374947, -0.951056516295154, 0.500000000000000),
        (-1.309016994374947, -0.951056516295154, -0.500000000000000),
        (0.500000000000000, 1.538841768587627, 0.500000000000000),
        (0.500000000000000, 1.538841768587627, -0.500000000000000),
        (0.500000000000000, -1.538841768587627, 0.500000000000000),
        (0.500000000000000, -1.538841768587627, -0.500000000000000),
        (-0.500000000000000, 1.538841768587627, 0.500000000000000),
        (-0.500000000000000, 1.538841768587627, -0.500000000000000),
        (-0.500000000000000, -1.538841768587627, 0.500000000000000),
        (-0.500000000000000, -1.538841768587627, -0.500000000000000),
        (0.809016994374947, 0.262865556059567, 1.025731112119134),
        (0.809016994374947, 0.262865556059567, -1.025731112119134),
        (-0.809016994374947, 0.262865556059567, 1.025731112119134),
        (-0.809016994374947, 0.262865556059567, -1.025731112119134),
        (0.500000000000000, -0.688190960235587, 1.025731112119134),
        (0.500000000000000, -0.688190960235587, -1.025731112119134),
        (-0.500000000000000, -0.688190960235587, 1.025731112119134),
        (-0.500000000000000, -0.688190960235587, -1.025731112119134),
        (0.000000000000000, 0.850650808352040, 1.025731112119134),
        (0.000000000000000, 0.850650808352040, -1.025731112119134),
    ])

def GyroelongatedPentagonalPyramid():
    return np.array([
        (0.500000000000000, 0.000000000000000, 0.809016994374947),
        (0.500000000000000, 0.000000000000000, -0.809016994374947),
        (-0.500000000000000, 0.000000000000000, 0.809016994374947),
        (-0.500000000000000, 0.000000000000000, -0.809016994374947),
        (0.809016994374947, 0.500000000000000, 0.000000000000000),
        (0.809016994374947, -0.500000000000000, 0.000000000000000),
        (-0.809016994374947, 0.500000000000000, 0.000000000000000),
        (-0.809016994374947, -0.500000000000000, 0.000000000000000),
        (0.000000000000000, 0.809016994374947, 0.500000000000000),
        (0.000000000000000, 0.809016994374947, -0.500000000000000),
        (0.000000000000000, -0.809016994374947, -0.500000000000000),
    ])

def ElongatedSquareGyrobicupola():
    return np.array([
        (0.707106781186548, 0.000000000000000, 1.207106781186547),
        (-0.707106781186548, 0.000000000000000, 1.207106781186547),
        (0.000000000000000, 0.707106781186548, 1.207106781186547),
        (0.000000000000000, -0.707106781186548, 1.207106781186547),
        (0.500000000000000, 0.500000000000000, -1.207106781186547),
        (0.500000000000000, -0.500000000000000, -1.207106781186547),
        (-0.500000000000000, 0.500000000000000, -1.207106781186547),
        (-0.500000000000000, -0.500000000000000, -1.207106781186547),
        (1.207106781186547, 0.500000000000000, 0.500000000000000),
        (1.207106781186547, 0.500000000000000, -0.500000000000000),
        (1.207106781186547, -0.500000000000000, 0.500000000000000),
        (1.207106781186547, -0.500000000000000, -0.500000000000000),
        (-1.207106781186547, 0.500000000000000, 0.500000000000000),
        (-1.207106781186547, 0.500000000000000, -0.500000000000000),
        (-1.207106781186547, -0.500000000000000, 0.500000000000000),
        (-1.207106781186547, -0.500000000000000, -0.500000000000000),
        (0.500000000000000, 1.207106781186547, 0.500000000000000),
        (0.500000000000000, 1.207106781186547, -0.500000000000000),
        (0.500000000000000, -1.207106781186547, 0.500000000000000),
        (0.500000000000000, -1.207106781186547, -0.500000000000000),
        (-0.500000000000000, 1.207106781186547, 0.500000000000000),
        (-0.500000000000000, 1.207106781186547, -0.500000000000000),
        (-0.500000000000000, -1.207106781186547, 0.500000000000000),
        (-0.500000000000000, -1.207106781186547, -0.500000000000000),
    ])

def SnubSquareAntiprism():
    return np.array([
        (1.213205545866313, 0.000000000000000, 0.185607021282180),
        (-1.213205545866313, 0.000000000000000, 0.185607021282180),
        (0.000000000000000, 1.213205545866313, 0.185607021282180),
        (0.000000000000000, -1.213205545866313, 0.185607021282180),
        (0.857865868455197, 0.857865868455197, -0.185607021282180),
        (0.857865868455197, -0.857865868455197, -0.185607021282180),
        (-0.857865868455197, 0.857865868455197, -0.185607021282180),
        (-0.857865868455197, -0.857865868455197, -0.185607021282180),
        (0.707106781186548, 0.000000000000000, -0.676868509031356),
        (-0.707106781186548, 0.000000000000000, -0.676868509031356),
        (0.000000000000000, 0.707106781186548, -0.676868509031356),
        (0.000000000000000, -0.707106781186548, -0.676868509031356),
        (0.500000000000000, 0.500000000000000, 0.676868509031356),
        (0.500000000000000, -0.500000000000000, 0.676868509031356),
        (-0.500000000000000, 0.500000000000000, 0.676868509031356),
        (-0.500000000000000, -0.500000000000000, 0.676868509031356),
    ])

def AugmentedSphenocorona():
    return np.array([
        (0.500000000000000, 0.852726942846417, 0.000000000000000),
        (0.500000000000000, -0.852726942846417, 0.000000000000000),
        (-0.500000000000000, 0.852726942846417, 0.000000000000000),
        (-0.500000000000000, -0.852726942846417, 0.000000000000000),
        (0.789427626660872, 0.000000000000000, -0.434842971507254),
        (-0.789427626660872, 0.000000000000000, -0.434842971507254),
        (0.500000000000000, 0.000000000000000, 0.522356928683638),
        (-0.500000000000000, 0.000000000000000, 0.522356928683638),
        (0.000000000000000, 0.500000000000000, -0.790938495579916),
        (0.000000000000000, -0.500000000000000, -0.790938495579916),
        (0.000000000000000, 0.795725597895187, 0.864147468128994),
    ])

def ElongatedSquarePyramid():
    return np.array([
        (0.500000000000000, 0.500000000000000, 0.500000000000000),
        (0.500000000000000, 0.500000000000000, -0.500000000000000),
        (0.500000000000000, -0.500000000000000, 0.500000000000000),
        (0.500000000000000, -0.500000000000000, -0.500000000000000),
        (-0.500000000000000, 0.500000000000000, 0.500000000000000),
        (-0.500000000000000, 0.500000000000000, -0.500000000000000),
        (-0.500000000000000, -0.500000000000000, 0.500000000000000),
        (-0.500000000000000, -0.500000000000000, -0.500000000000000),
        (0.000000000000000, 0.000000000000000, 1.207106781186547),
    ])

def TriangularDipyramid():
    return np.array([
        (0.471404520791032, 0.471404520791032, 0.471404520791032),
        (-0.471404520791032, -0.471404520791032, -0.471404520791032),
        (0.471404520791032, -0.235702260395516, -0.235702260395516),
        (-0.235702260395516, 0.471404520791032, -0.235702260395516),
        (-0.235702260395516, -0.235702260395516, 0.471404520791032),
    ])

def MetagyrateDiminishedRhombicosidodecahedron():
    return np.array([
        (0.500000000000000, 0.500000000000000, 2.118033988749895),
        (0.500000000000000, 0.500000000000000, -2.118033988749895),
        (0.500000000000000, -0.500000000000000, 2.118033988749895),
        (0.500000000000000, -0.500000000000000, -2.118033988749895),
        (-0.500000000000000, 0.500000000000000, 2.118033988749895),
        (-0.500000000000000, 0.500000000000000, -2.118033988749895),
        (-0.500000000000000, -0.500000000000000, 2.118033988749895),
        (-0.500000000000000, -0.500000000000000, -2.118033988749895),
        (2.118033988749895, 0.500000000000000, 0.500000000000000),
        (2.118033988749895, 0.500000000000000, -0.500000000000000),
        (2.118033988749895, -0.500000000000000, 0.500000000000000),
        (2.118033988749895, -0.500000000000000, -0.500000000000000),
        (-2.118033988749895, 0.500000000000000, 0.500000000000000),
        (-2.118033988749895, 0.500000000000000, -0.500000000000000),
        (-2.118033988749895, -0.500000000000000, 0.500000000000000),
        (-2.118033988749895, -0.500000000000000, -0.500000000000000),
        (0.500000000000000, 2.118033988749895, -0.500000000000000),
        (0.500000000000000, -1.394427190999916, 1.670820393249937),
        (0.500000000000000, -2.118033988749895, -0.500000000000000),
        (-0.500000000000000, 2.118033988749895, -0.500000000000000),
        (-0.500000000000000, -1.394427190999916, 1.670820393249937),
        (-0.500000000000000, -2.118033988749895, -0.500000000000000),
        (0.000000000000000, 1.309016994374947, -1.809016994374947),
        (0.000000000000000, -2.203444185374863, 0.361803398874989),
        (0.000000000000000, -1.309016994374947, -1.809016994374947),
        (1.809016994374947, 0.000000000000000, 1.309016994374947),
        (1.809016994374947, 0.000000000000000, -1.309016994374947),
        (-1.809016994374947, 0.000000000000000, 1.309016994374947),
        (-1.809016994374947, 0.000000000000000, -1.309016994374947),
        (1.309016994374947, 1.809016994374947, 0.000000000000000),
        (1.309016994374947, -1.809016994374947, 0.000000000000000),
        (-1.309016994374947, 1.809016994374947, 0.000000000000000),
        (-1.309016994374947, -1.809016994374947, 0.000000000000000),
        (1.309016994374947, 0.809016994374947, 1.618033988749895),
        (1.309016994374947, 0.809016994374947, -1.618033988749895),
        (1.309016994374947, -0.809016994374947, 1.618033988749895),
        (1.309016994374947, -0.809016994374947, -1.618033988749895),
        (-1.309016994374947, 0.809016994374947, 1.618033988749895),
        (-1.309016994374947, 0.809016994374947, -1.618033988749895),
        (-1.309016994374947, -0.809016994374947, 1.618033988749895),
        (-1.309016994374947, -0.809016994374947, -1.618033988749895),
        (1.618033988749895, 1.309016994374947, 0.809016994374947),
        (1.618033988749895, 1.309016994374947, -0.809016994374947),
        (1.618033988749895, -1.309016994374947, 0.809016994374947),
        (1.618033988749895, -1.309016994374947, -0.809016994374947),
        (-1.618033988749895, 1.309016994374947, 0.809016994374947),
        (-1.618033988749895, 1.309016994374947, -0.809016994374947),
        (-1.618033988749895, -1.309016994374947, 0.809016994374947),
        (-1.618033988749895, -1.309016994374947, -0.809016994374947),
        (0.809016994374947, 1.618033988749895, -1.309016994374947),
        (0.809016994374947, -1.894427190999916, 0.861803398874989),
        (0.809016994374947, -1.618033988749895, -1.309016994374947),
        (-0.809016994374947, 1.618033988749895, -1.309016994374947),
        (-0.809016994374947, -1.894427190999916, 0.861803398874989),
        (-0.809016994374947, -1.618033988749895, -1.309016994374947),
    ])

def GyroelongatedSquareCupola():
    return np.array([
        (1.207106781186547, 0.500000000000000, 0.430147784931486),
        (1.207106781186547, -0.500000000000000, 0.430147784931486),
        (-1.207106781186547, 0.500000000000000, 0.430147784931486),
        (-1.207106781186547, -0.500000000000000, 0.430147784931486),
        (0.500000000000000, 1.207106781186547, 0.430147784931486),
        (0.500000000000000, -1.207106781186547, 0.430147784931486),
        (-0.500000000000000, 1.207106781186547, 0.430147784931486),
        (-0.500000000000000, -1.207106781186547, 0.430147784931486),
        (1.306562964876377, 0.000000000000000, -0.430147784931486),
        (-1.306562964876377, 0.000000000000000, -0.430147784931486),
        (0.000000000000000, 1.306562964876377, -0.430147784931486),
        (0.000000000000000, -1.306562964876377, -0.430147784931486),
        (0.923879532511287, 0.923879532511287, -0.430147784931486),
        (0.923879532511287, -0.923879532511287, -0.430147784931486),
        (-0.923879532511287, 0.923879532511287, -0.430147784931486),
        (-0.923879532511287, -0.923879532511287, -0.430147784931486),
        (0.500000000000000, 0.500000000000000, 1.137254566118033),
        (0.500000000000000, -0.500000000000000, 1.137254566118033),
        (-0.500000000000000, 0.500000000000000, 1.137254566118033),
        (-0.500000000000000, -0.500000000000000, 1.137254566118033),
    ])

def TriaugmentedDodecahedron():
    return np.array([
        (0.000000000000000, 0.500000000000000, 1.309016994374947),
        (0.000000000000000, 0.500000000000000, -1.309016994374947),
        (0.000000000000000, -0.500000000000000, 1.309016994374947),
        (0.000000000000000, -0.500000000000000, -1.309016994374947),
        (1.309016994374947, 0.000000000000000, 0.500000000000000),
        (1.309016994374947, 0.000000000000000, -0.500000000000000),
        (-1.309016994374947, 0.000000000000000, 0.500000000000000),
        (-1.309016994374947, 0.000000000000000, -0.500000000000000),
        (0.500000000000000, 1.309016994374947, 0.000000000000000),
        (0.500000000000000, -1.309016994374947, 0.000000000000000),
        (-0.500000000000000, 1.309016994374947, 0.000000000000000),
        (-0.500000000000000, -1.309016994374947, 0.000000000000000),
        (0.809016994374947, 0.809016994374947, 0.809016994374947),
        (0.809016994374947, 0.809016994374947, -0.809016994374947),
        (0.809016994374947, -0.809016994374947, 0.809016994374947),
        (0.809016994374947, -0.809016994374947, -0.809016994374947),
        (-0.809016994374947, 0.809016994374947, 0.809016994374947),
        (-0.809016994374947, 0.809016994374947, -0.809016994374947),
        (-0.809016994374947, -0.809016994374947, 0.809016994374947),
        (-0.809016994374947, -0.809016994374947, -0.809016994374947),
        (1.394427190999916, 0.861803398874989, 0.000000000000000),
        (-1.394427190999916, 0.861803398874989, 0.000000000000000),
        (0.000000000000000, -1.394427190999916, 0.861803398874989),
    ])

def MetabidiminishedRhombicosidodecahedron():
    return np.array([
        (0.500000000000000, 0.500000000000000, 2.118033988749895),
        (0.500000000000000, 0.500000000000000, -2.118033988749895),
        (0.500000000000000, -0.500000000000000, 2.118033988749895),
        (0.500000000000000, -0.500000000000000, -2.118033988749895),
        (-0.500000000000000, 0.500000000000000, 2.118033988749895),
        (-0.500000000000000, 0.500000000000000, -2.118033988749895),
        (-0.500000000000000, -0.500000000000000, 2.118033988749895),
        (-0.500000000000000, -0.500000000000000, -2.118033988749895),
        (2.118033988749895, 0.500000000000000, 0.500000000000000),
        (2.118033988749895, 0.500000000000000, -0.500000000000000),
        (2.118033988749895, -0.500000000000000, 0.500000000000000),
        (2.118033988749895, -0.500000000000000, -0.500000000000000),
        (-2.118033988749895, 0.500000000000000, 0.500000000000000),
        (-2.118033988749895, 0.500000000000000, -0.500000000000000),
        (-2.118033988749895, -0.500000000000000, 0.500000000000000),
        (-2.118033988749895, -0.500000000000000, -0.500000000000000),
        (0.500000000000000, 2.118033988749895, -0.500000000000000),
        (0.500000000000000, -2.118033988749895, -0.500000000000000),
        (-0.500000000000000, 2.118033988749895, -0.500000000000000),
        (-0.500000000000000, -2.118033988749895, -0.500000000000000),
        (0.000000000000000, 1.309016994374947, -1.809016994374947),
        (0.000000000000000, -1.309016994374947, -1.809016994374947),
        (1.809016994374947, 0.000000000000000, 1.309016994374947),
        (1.809016994374947, 0.000000000000000, -1.309016994374947),
        (-1.809016994374947, 0.000000000000000, 1.309016994374947),
        (-1.809016994374947, 0.000000000000000, -1.309016994374947),
        (1.309016994374947, 1.809016994374947, 0.000000000000000),
        (1.309016994374947, -1.809016994374947, 0.000000000000000),
        (-1.309016994374947, 1.809016994374947, 0.000000000000000),
        (-1.309016994374947, -1.809016994374947, 0.000000000000000),
        (1.309016994374947, 0.809016994374947, 1.618033988749895),
        (1.309016994374947, 0.809016994374947, -1.618033988749895),
        (1.309016994374947, -0.809016994374947, 1.618033988749895),
        (1.309016994374947, -0.809016994374947, -1.618033988749895),
        (-1.309016994374947, 0.809016994374947, 1.618033988749895),
        (-1.309016994374947, 0.809016994374947, -1.618033988749895),
        (-1.309016994374947, -0.809016994374947, 1.618033988749895),
        (-1.309016994374947, -0.809016994374947, -1.618033988749895),
        (1.618033988749895, 1.309016994374947, 0.809016994374947),
        (1.618033988749895, 1.309016994374947, -0.809016994374947),
        (1.618033988749895, -1.309016994374947, 0.809016994374947),
        (1.618033988749895, -1.309016994374947, -0.809016994374947),
        (-1.618033988749895, 1.309016994374947, 0.809016994374947),
        (-1.618033988749895, 1.309016994374947, -0.809016994374947),
        (-1.618033988749895, -1.309016994374947, 0.809016994374947),
        (-1.618033988749895, -1.309016994374947, -0.809016994374947),
        (0.809016994374947, 1.618033988749895, -1.309016994374947),
        (0.809016994374947, -1.618033988749895, -1.309016994374947),
        (-0.809016994374947, 1.618033988749895, -1.309016994374947),
        (-0.809016994374947, -1.618033988749895, -1.309016994374947),
    ])

def ElongatedTriangularCupola():
    return np.array([
        (0.995781915781360, -0.418431646591735, 0.288675134594813),
        (-0.995781915781360, 0.418431646591735, -0.288675134594813),
        (-0.288675134594813, -0.995781915781360, 0.418431646591735),
        (0.288675134594813, 0.995781915781360, -0.418431646591735),
        (-0.418431646591735, 0.288675134594813, 0.995781915781360),
        (0.418431646591735, -0.288675134594813, -0.995781915781360),
        (-0.995781915781360, -0.288675134594813, 0.418431646591735),
        (0.995781915781360, 0.288675134594813, -0.418431646591735),
        (-0.418431646591735, 0.995781915781360, 0.288675134594813),
        (0.418431646591735, -0.995781915781360, -0.288675134594813),
        (0.288675134594813, -0.418431646591735, 0.995781915781360),
        (-0.288675134594813, 0.418431646591735, -0.995781915781360),
        (0.288675134594813, 0.995781915781360, 0.995781915781360),
        (0.995781915781360, 0.288675134594813, 0.995781915781360),
        (0.995781915781360, 0.995781915781360, 0.288675134594813),
    ])

def ElongatedPentagonalDipyramid():
    return np.array([
        (0.809016994374947, 0.262865556059567, 0.500000000000000),
        (0.809016994374947, 0.262865556059567, -0.500000000000000),
        (-0.809016994374947, 0.262865556059567, 0.500000000000000),
        (-0.809016994374947, 0.262865556059567, -0.500000000000000),
        (0.500000000000000, -0.688190960235587, 0.500000000000000),
        (0.500000000000000, -0.688190960235587, -0.500000000000000),
        (-0.500000000000000, -0.688190960235587, 0.500000000000000),
        (-0.500000000000000, -0.688190960235587, -0.500000000000000),
        (0.000000000000000, 0.850650808352040, 0.500000000000000),
        (0.000000000000000, 0.850650808352040, -0.500000000000000),
        (0.000000000000000, 0.000000000000000, 1.025731112119134),
        (0.000000000000000, 0.000000000000000, -1.025731112119134),
    ])

def PentagonalOrthocupolarotunda():
    return np.array([
        (0.000000000000000, 0.000000000000000, 1.618033988749895),
        (0.000000000000000, 0.000000000000000, -1.618033988749895),
        (1.618033988749895, 0.000000000000000, 0.000000000000000),
        (0.000000000000000, 1.618033988749895, 0.000000000000000),
        (-0.809016994374947, 0.500000000000000, 1.309016994374947),
        (-0.809016994374947, 0.500000000000000, -1.309016994374947),
        (0.809016994374947, -0.500000000000000, 1.309016994374947),
        (0.809016994374947, -0.500000000000000, -1.309016994374947),
        (0.809016994374947, 0.500000000000000, 1.309016994374947),
        (0.809016994374947, 0.500000000000000, -1.309016994374947),
        (-1.309016994374947, 0.809016994374947, 0.500000000000000),
        (-1.309016994374947, 0.809016994374947, -0.500000000000000),
        (1.309016994374947, -0.809016994374947, 0.500000000000000),
        (1.309016994374947, -0.809016994374947, -0.500000000000000),
        (1.309016994374947, 0.809016994374947, 0.500000000000000),
        (1.309016994374947, 0.809016994374947, -0.500000000000000),
        (-0.500000000000000, 1.309016994374947, 0.809016994374947),
        (-0.500000000000000, 1.309016994374947, -0.809016994374947),
        (0.500000000000000, 1.309016994374947, 0.809016994374947),
        (0.500000000000000, 1.309016994374947, -0.809016994374947),
        (-1.000000000000000, 0.000000000000000, 0.000000000000000),
        (-0.500000000000000, -0.309016994374947, 0.809016994374947),
        (-0.500000000000000, -0.309016994374947, -0.809016994374947),
        (0.309016994374947, -0.809016994374947, 0.500000000000000),
        (0.309016994374947, -0.809016994374947, -0.500000000000000),
    ])

def PentagonalGyrocupolarotunda():
    return np.array([
        (0.000000000000000, 0.000000000000000, 1.618033988749895),
        (0.000000000000000, 0.000000000000000, -1.618033988749895),
        (1.618033988749895, 0.000000000000000, 0.000000000000000),
        (0.000000000000000, 1.618033988749895, 0.000000000000000),
        (0.809016994374947, 0.500000000000000, 1.309016994374947),
        (0.809016994374947, 0.500000000000000, -1.309016994374947),
        (0.809016994374947, -0.500000000000000, 1.309016994374947),
        (0.809016994374947, -0.500000000000000, -1.309016994374947),
        (-0.809016994374947, 0.500000000000000, 1.309016994374947),
        (-0.809016994374947, 0.500000000000000, -1.309016994374947),
        (1.309016994374947, 0.809016994374947, 0.500000000000000),
        (1.309016994374947, 0.809016994374947, -0.500000000000000),
        (1.309016994374947, -0.809016994374947, 0.500000000000000),
        (1.309016994374947, -0.809016994374947, -0.500000000000000),
        (-1.309016994374947, 0.809016994374947, 0.500000000000000),
        (-1.309016994374947, 0.809016994374947, -0.500000000000000),
        (0.500000000000000, 1.309016994374947, 0.809016994374947),
        (0.500000000000000, 1.309016994374947, -0.809016994374947),
        (-0.500000000000000, 1.309016994374947, 0.809016994374947),
        (-0.500000000000000, 1.309016994374947, -0.809016994374947),
        (0.447213595499958, -0.894427190999916, 0.000000000000000),
        (-0.861803398874989, -0.085410196624968, 0.500000000000000),
        (-0.861803398874989, -0.085410196624968, -0.500000000000000),
        (-0.052786404500042, -0.585410196624968, 0.809016994374947),
        (-0.052786404500042, -0.585410196624968, -0.809016994374947),
    ])

def TridiminishedIcosahedron():
    return np.array([
        (0.500000000000000, 0.000000000000000, 0.809016994374947),
        (0.500000000000000, 0.000000000000000, -0.809016994374947),
        (-0.500000000000000, 0.000000000000000, 0.809016994374947),
        (-0.500000000000000, 0.000000000000000, -0.809016994374947),
        (0.809016994374947, 0.500000000000000, 0.000000000000000),
        (-0.809016994374947, 0.500000000000000, 0.000000000000000),
        (0.000000000000000, -0.809016994374947, 0.500000000000000),
        (0.000000000000000, -0.809016994374947, -0.500000000000000),
        (0.000000000000000, 0.809016994374947, -0.500000000000000),
    ])

def BiaugmentedTriangularPrism():
    return np.array([
        (0.500000000000000, 0.500000000000000, 0.288675134594813),
        (0.500000000000000, -0.500000000000000, 0.288675134594813),
        (-0.500000000000000, 0.500000000000000, 0.288675134594813),
        (-0.500000000000000, -0.500000000000000, 0.288675134594813),
        (0.000000000000000, 0.500000000000000, -0.577350269189626),
        (0.000000000000000, -0.500000000000000, -0.577350269189626),
        (0.862372435695794, 0.000000000000000, -0.497890957890680),
        (-0.862372435695794, 0.000000000000000, -0.497890957890680),
    ])

def ParabidiminishedRhombicosidodecahedron():
    return np.array([
        (0.500000000000000, 0.500000000000000, 2.118033988749895),
        (0.500000000000000, 0.500000000000000, -2.118033988749895),
        (0.500000000000000, -0.500000000000000, 2.118033988749895),
        (0.500000000000000, -0.500000000000000, -2.118033988749895),
        (-0.500000000000000, 0.500000000000000, 2.118033988749895),
        (-0.500000000000000, 0.500000000000000, -2.118033988749895),
        (-0.500000000000000, -0.500000000000000, 2.118033988749895),
        (-0.500000000000000, -0.500000000000000, -2.118033988749895),
        (2.118033988749895, 0.500000000000000, 0.500000000000000),
        (2.118033988749895, 0.500000000000000, -0.500000000000000),
        (2.118033988749895, -0.500000000000000, 0.500000000000000),
        (2.118033988749895, -0.500000000000000, -0.500000000000000),
        (-2.118033988749895, 0.500000000000000, 0.500000000000000),
        (-2.118033988749895, 0.500000000000000, -0.500000000000000),
        (-2.118033988749895, -0.500000000000000, 0.500000000000000),
        (-2.118033988749895, -0.500000000000000, -0.500000000000000),
        (0.500000000000000, -2.118033988749895, 0.500000000000000),
        (0.500000000000000, 2.118033988749895, -0.500000000000000),
        (-0.500000000000000, -2.118033988749895, 0.500000000000000),
        (-0.500000000000000, 2.118033988749895, -0.500000000000000),
        (0.000000000000000, -1.309016994374947, 1.809016994374947),
        (0.000000000000000, 1.309016994374947, -1.809016994374947),
        (1.809016994374947, 0.000000000000000, 1.309016994374947),
        (1.809016994374947, 0.000000000000000, -1.309016994374947),
        (-1.809016994374947, 0.000000000000000, 1.309016994374947),
        (-1.809016994374947, 0.000000000000000, -1.309016994374947),
        (1.309016994374947, 1.809016994374947, 0.000000000000000),
        (1.309016994374947, -1.809016994374947, 0.000000000000000),
        (-1.309016994374947, 1.809016994374947, 0.000000000000000),
        (-1.309016994374947, -1.809016994374947, 0.000000000000000),
        (1.309016994374947, 0.809016994374947, 1.618033988749895),
        (1.309016994374947, 0.809016994374947, -1.618033988749895),
        (1.309016994374947, -0.809016994374947, 1.618033988749895),
        (1.309016994374947, -0.809016994374947, -1.618033988749895),
        (-1.309016994374947, 0.809016994374947, 1.618033988749895),
        (-1.309016994374947, 0.809016994374947, -1.618033988749895),
        (-1.309016994374947, -0.809016994374947, 1.618033988749895),
        (-1.309016994374947, -0.809016994374947, -1.618033988749895),
        (1.618033988749895, 1.309016994374947, 0.809016994374947),
        (1.618033988749895, 1.309016994374947, -0.809016994374947),
        (1.618033988749895, -1.309016994374947, 0.809016994374947),
        (1.618033988749895, -1.309016994374947, -0.809016994374947),
        (-1.618033988749895, 1.309016994374947, 0.809016994374947),
        (-1.618033988749895, 1.309016994374947, -0.809016994374947),
        (-1.618033988749895, -1.309016994374947, 0.809016994374947),
        (-1.618033988749895, -1.309016994374947, -0.809016994374947),
        (0.809016994374947, -1.618033988749895, 1.309016994374947),
        (0.809016994374947, 1.618033988749895, -1.309016994374947),
        (-0.809016994374947, -1.618033988749895, 1.309016994374947),
        (-0.809016994374947, 1.618033988749895, -1.309016994374947),
    ])

def TriangularOrthobicupola():
    return np.array([
        (-0.235702260395516, -0.235702260395516, -0.942809041582063),
        (-0.235702260395516, -0.942809041582063, -0.235702260395516),
        (-0.942809041582063, -0.235702260395516, -0.235702260395516),
        (0.707106781186548, 0.000000000000000, 0.707106781186548),
        (0.707106781186548, 0.000000000000000, -0.707106781186548),
        (-0.707106781186548, 0.000000000000000, 0.707106781186548),
        (0.707106781186548, 0.707106781186548, 0.000000000000000),
        (0.707106781186548, -0.707106781186548, 0.000000000000000),
        (-0.707106781186548, 0.707106781186548, 0.000000000000000),
        (0.000000000000000, 0.707106781186548, 0.707106781186548),
        (0.000000000000000, 0.707106781186548, -0.707106781186548),
        (0.000000000000000, -0.707106781186548, 0.707106781186548),
    ])

